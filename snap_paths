#!/bin/bash
############################################################################
############################################################################
##
## Copyright 2016,2017 International Business Machines
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE#2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions AND
## limitations under the License.
##
############################################################################
############################################################################
#
# important path variables for SNAP
called=$BASH_SOURCE                # can be path+name, absolut or relative
script=$(readlink -f "$called")    # absolute path+name
snapdir=$(dirname "$script")       # just path

unset SETUP_DONE;
while [ -z "$SETUP_DONE" ]; do
  SETUP_WARNING=""
  echo "======================================================="
  echo "== SNAP PATHS SETUP                                  =="
  echo "======================================================="

  ####### checking Xilinx Vivado:
  echo "=====Checking Xilinx Vivado============================"
  if [ ! -d "$XILINX_VIVADO" ]; then
    echo "XILINX_VIVADO is not set, please source settings64.sh from your Vivado installation"
    break
  fi
  if [ -z "$XILINXD_LICENSE_FILE" ]; then
    echo "XILINXD_LICENSE_FILE is not set. The following commands needs to be executed before calling this script:"
    echo "	export XILINXD_LICENSE_FILE=<pointer to Vivado license>"
    break
  fi

  if [ -z `which vivado 2> /dev/null` ]; then
    echo "Path to vivado not set, please add to environment variable \$PATH"
    break
  fi
  # printing Vivado version
  echo "Path to vivado          is set to: `which vivado`"
  echo "Vivado version          is set to: `vivado -version|head -n1`"

  # checking path to PSL design checkpoint
  echo "=====Checking Path to PSL design checkpoint============"
  if [ ! -f "$PSL_DCP" ]; then
    echo "Error: The following environment variable must be set before calling this script:"
    echo "	export PSL_DCP=<CAPI PSL Checkpoint file (b_route_design.dcp)>"
    echo "For more information see also README.md"
    break
  fi
  # printing path to PSL design checkpoint
  echo "PSL_DCP                 is set to: \"$PSL_DCP\""

  echo "=====SNAP PATH variables==============================="
  if [ -z "$SNAP_ROOT" ]; then
    export SNAP_ROOT=$snapdir
    echo "Setting SNAP_ROOT              to: \"$snapdir\""
  else
    echo "SNAP_ROOT               is set to: \"$SNAP_ROOT\""
  fi

  if [ -z "$ACTION_ROOT" ]; then
    export ACTION_ROOT=$SNAP_ROOT/actions/hdl_example
    echo "Setting ACTION_ROOT            to: \"$ACTION_ROOT\""
  else
    echo "ACTION_ROOT             is set to: \"$ACTION_ROOT\""
    # check if ACTION_ROOT points to an existing direcory or ACTION_ROOT ends in 'vhdl' for an HLS action
    if [ ! -d "$ACTION_ROOT" ] && ( ( [ -z `echo "x$ACTION_ROOT" | grep -i HLS` ] && [ "${HLS_SUPPORT^^}" != "TRUE" ] ) || [ `basename "x$ACTION_ROOT"` != "vhdl" ] ); then
      SETUP_WARNING="$SETUP_WARNING\n### WARNING ### Please make sure that ACTION_ROOT points to an existing directory."
    fi
  fi

  if [ ! -z "$SETUP_WARNING" ]; then
    echo -e "$SETUP_WARNING"
  fi

  echo

  SETUP_DONE="1"
done
# set a return value in case that the file was sourced
if [[ "$_" = "$0" ]]; then
  if [[ "$SETUP_DONE" == "1" ]];then return 0;else return 1;fi
fi
