----------------------------------------------------------------------------
----------------------------------------------------------------------------
--
-- Copyright 2017 International Business Machines
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions AND
-- limitations under the License.
--
----------------------------------------------------------------------------
----------------------------------------------------------------------------

  LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.std_logic_misc.all;
  USE ieee.std_logic_unsigned.all;
  USE ieee.numeric_std.all;

  USE work.psl_accel_types.ALL;
  USE work.snap_core_types.ALL;
  USE work.action_types.ALL;

ENTITY psl_accel IS
  GENERIC (
    BRAM_USED  : BOOLEAN := FALSE;

    -- Parameters for Axi Master Bus Interface AXI_CARD_MEM0 : to DDR memory
    C_AXI_CARD_MEM0_ID_WIDTH            : integer   := C_DDR_AXI_ID_WIDTH;
    C_AXI_CARD_MEM0_ADDR_WIDTH          : integer   := C_DDR_AXI_ADDR_WIDTH;
    C_AXI_CARD_MEM0_DATA_WIDTH          : integer   := C_DDR_AXI_DATA_WIDTH;
    C_AXI_CARD_MEM0_AWUSER_WIDTH        : integer   := C_DDR_AXI_AWUSER_WIDTH;
    C_AXI_CARD_MEM0_ARUSER_WIDTH        : integer   := C_DDR_AXI_ARUSER_WIDTH;
    C_AXI_CARD_MEM0_WUSER_WIDTH         : integer   := C_DDR_AXI_WUSER_WIDTH;
    C_AXI_CARD_MEM0_RUSER_WIDTH         : integer   := C_DDR_AXI_RUSER_WIDTH;
    C_AXI_CARD_MEM0_BUSER_WIDTH         : integer   := C_DDR_AXI_BUSER_WIDTH;
#ifdef CONFIG_ENABLE_HBM
    -- Parameters for HBM ports
    C_M_AXI_CARD_HBM_ADDR_WIDTH      : INTEGER := C_M_AXI_CARD_HBM_ADDR_WIDTH;
    C_M_AXI_CARD_HBM_ID_WIDTH        : INTEGER := C_M_AXI_CARD_HBM_ID_WIDTH;
    C_M_AXI_CARD_HBM_AWUSER_WIDTH    : INTEGER := C_M_AXI_CARD_HBM_AWUSER_WIDTH;
    C_M_AXI_CARD_HBM_DATA_WIDTH      : INTEGER := C_M_AXI_CARD_HBM_DATA_WIDTH;
    C_M_AXI_CARD_HBM_WUSER_WIDTH     : INTEGER := C_M_AXI_CARD_HBM_WUSER_WIDTH;
    C_M_AXI_CARD_HBM_ARUSER_WIDTH    : INTEGER := C_M_AXI_CARD_HBM_ARUSER_WIDTH;
    C_M_AXI_CARD_HBM_RUSER_WIDTH     : INTEGER := C_M_AXI_CARD_HBM_RUSER_WIDTH;
    C_M_AXI_CARD_HBM_BUSER_WIDTH     : INTEGER := C_M_AXI_CARD_HBM_BUSER_WIDTH;
#endif
    -- Parameters for Axi Slave Bus Interface AXI_CTRL_REG
    C_AXI_CTRL_REG_DATA_WIDTH           : integer   := C_REG_DATA_WIDTH;
    C_AXI_CTRL_REG_ADDR_WIDTH           : integer   := C_REG_ADDR_WIDTH;

    -- Parameters for Axi Master Bus Interface AXI_HOST_MEM : to Host memory
    C_AXI_HOST_MEM_ID_WIDTH             : integer   := C_HOST_AXI_ID_WIDTH;
    C_AXI_HOST_MEM_ADDR_WIDTH           : integer   := C_HOST_AXI_ADDR_WIDTH;
    C_AXI_HOST_MEM_DATA_WIDTH           : integer   := C_HOST_AXI_DATA_WIDTH;
    C_AXI_HOST_MEM_AWUSER_WIDTH         : integer   := CONTEXT_BITS;
    C_AXI_HOST_MEM_ARUSER_WIDTH         : integer   := CONTEXT_BITS;
    C_AXI_HOST_MEM_WUSER_WIDTH          : integer   := C_HOST_AXI_WUSER_WIDTH;
    C_AXI_HOST_MEM_RUSER_WIDTH          : integer   := C_HOST_AXI_RUSER_WIDTH;
    C_AXI_HOST_MEM_BUSER_WIDTH          : integer   := C_HOST_AXI_BUSER_WIDTH
  );
  PORT(
       -- Command interface
       ah_cvalid                        : OUT   std_logic                  ; -- Command valid
       ah_ctag                          : OUT   std_logic_vector(0 to 7)   ; -- Command tag
       ah_ctagpar                       : OUT   std_logic                  ; -- Command tag parity
       ah_com                           : OUT   std_logic_vector(0 to 12)  ; -- Command code
       ah_compar                        : OUT   std_logic                  ; -- Command code parity
       ah_cabt                          : OUT   std_logic_vector(0 to 2)   ; -- Command ABT
       ah_cea                           : OUT   std_logic_vector(0 to 63)  ; -- Command address
       ah_ceapar                          : OUT   std_logic                  ; -- Command address parity
       ah_cch                           : OUT   std_logic_vector(0 to 15)  ; -- Command context handle
       ah_csize                         : OUT   std_logic_vector(0 to 11)  ; -- Command size
       ah_cpagesize                     : OUT   std_logic_vector(0 to 3)   := (others => '0'); -- ** New tie to 0000
       ha_croom                         : IN    std_logic_vector(0 to 7)   ; -- Command room
       -- Buffer interface
       ha_brvalid                       : IN    std_logic                  ; -- Buffer Read valid
       ha_brtag                         : IN    std_logic_vector(0 to 7)   ; -- Buffer Read tag
       ha_brtagpar                      : IN    std_logic                  ; -- Buffer Read tag parity
       ha_brad                          : IN    std_logic_vector(0 to 5)   ; -- Buffer Read address
       ah_brlat                         : OUT   std_logic_vector(0 to 3)   ; -- Buffer Read latency
       ah_brdata                        : OUT   std_logic_vector(0 to 1023); -- Buffer Read data
       ah_brpar                         : OUT   std_logic_vector(0 to 15)  ; -- Buffer Read data parity
       ha_bwvalid                       : IN    std_logic                  ; -- Buffer Write valid
       ha_bwtag                         : IN    std_logic_vector(0 to 7)   ; -- Buffer Write tag
       ha_bwtagpar                      : IN    std_logic                  ; -- Buffer Write tag parity
       ha_bwad                          : IN    std_logic_vector(0 to 5)   ; -- Buffer Write address
       ha_bwdata                        : IN    std_logic_vector(0 to 1023); -- Buffer Write data
       ha_bwpar                         : IN    std_logic_vector(0 to 15)  ; -- Buffer Write data parity
       -- Response interface
       ha_rvalid                        : IN    std_logic                  ; -- Response valid
       ha_rtag                          : IN    std_logic_vector(0 to 7)   ; -- Response tag
       ha_rtagpar                       : IN    std_logic                  ; -- Response tag parity
       ha_rditag                        : IN    std_logic_vector(0 to 8);    -- **New DMA Translation Tag for xlat_* requests
       ha_rditagpar                     : IN    std_logic;                   -- **New Parity bit for above
       ha_response                      : IN    std_logic_vector(0 to 7)   ; -- Response
       ha_response_ext                  : IN    std_logic_vector(0 to 7)   ; -- **New Response Ext
       ha_rpagesize                     : IN    std_logic_vector(0 to 3);    -- **New Command translated Page size.  Provided by PSL to allow
       ha_rcachestate                   : IN    std_logic_vector(0 to 1)   ; -- Response cache state
       ha_rcachepos                     : IN    std_logic_vector(0 to 12)  ; -- Response cache pos
       ha_rcredits                      : IN    std_logic_vector(0 to 8)   ; -- Response credits
    -- ha_reoa                          : IN    std_logic_vector(0 to 185);  -- **New unknown width or use
       -- MMIO interface
       ha_mmval                         : IN    std_logic                  ; -- A valid MMIO is present
       ha_mmcfg                         : IN    std_logic                  ; -- afu descriptor space access
       ha_mmrnw                         : IN    std_logic                  ; -- 1 = read, 0 = write
       ha_mmdw                          : IN    std_logic                  ; -- 1 = doubleword, 0 = word
       ha_mmad                          : IN    std_logic_vector(0 to 23)  ; -- mmio address
       ha_mmadpar                       : IN    std_logic                  ; -- mmio address parity
       ha_mmdata                        : IN    std_logic_vector(0 to 63)  ; -- Write data
       ha_mmdatapar                     : IN    std_logic                  ; -- mmio data parity
       ah_mmack                         : OUT   std_logic                  ; -- Write is complete or Read is valid
       ah_mmdata                        : OUT   std_logic_vector(0 to 63)  ; -- Read data
       ah_mmdatapar                     : OUT   std_logic                  ; -- mmio data parity
       -- Control interface
       ha_jval                          : IN    std_logic                  ; -- Job valid
       ha_jcom                          : IN    std_logic_vector(0 to 7)   ; -- Job command
       ha_jcompar                       : IN    std_logic                  ; -- Job command parity
       ha_jea                           : IN    std_logic_vector(0 to 63)  ; -- Job address
       ha_jeapar                        : IN    std_logic                  ; -- Job address parity
       ah_jrunning                      : OUT   std_logic                  ; -- Job running
       ah_jdone                         : OUT   std_logic                  ; -- Job done
       ah_jcack                         : OUT   std_logic                  ; -- completion of llcmd
       ah_jerror                        : OUT   std_logic_vector(0 to 63)  ; -- Job error
       ah_jyield                        : OUT std_logic                    ; -- Job yield

       -- DMA port 0 Req
       d0h_dvalid                       : OUT   std_logic                  ;
       d0h_req_utag                     : OUT   std_logic_vector(0 to 9)   ;
       d0h_req_itag                     : OUT   std_logic_vector(0 to 8)   ;
       d0h_dtype                        : OUT   std_logic_vector(0 to 2)   ;
       d0h_datomic_op                   : OUT   std_logic_vector(0 to 5)   ;
       d0h_datomic_le                   : OUT   std_logic                  ;
       d0h_dsize                        : OUT   std_logic_vector(0 to 9)   ;
       d0h_ddata                        : OUT   std_logic_vector(0 to 1023);
       -- DMA port 0 Sent
       hd0_sent_utag_valid              : IN    std_logic                  ;
       hd0_sent_utag                    : IN    std_logic_vector(0 to 9)   ;
       hd0_sent_utag_sts                : IN    std_logic_vector(0 to 2)   ;
       -- DMA port 0 Completion interface
       hd0_cpl_valid                    : IN    std_logic                  ;
       hd0_cpl_utag                     : IN    std_logic_vector(0 to 9)   ;
       hd0_cpl_type                     : IN    std_logic_vector(0 to 2)   ;
       hd0_cpl_size                     : IN    std_logic_vector(0 to 9)   ;
       hd0_cpl_laddr                    : IN    std_logic_vector(0 to 6)   ;
       hd0_cpl_byte_count               : IN    std_logic_vector(0 to 9)   ;
       hd0_cpl_data                     : IN    std_logic_vector(0 to 1023);

       -- DMA port 1 Request
       d1h_dvalid                       : OUT   std_logic                  ;
       d1h_req_utag                     : OUT   std_logic_vector(0 to 9)   ;
       d1h_req_itag                     : OUT   std_logic_vector(0 to 8)   ;
       d1h_dtype                        : OUT   std_logic_vector(0 to 2)   ;
       d1h_datomic_op                   : OUT   std_logic_vector(0 to 5)   ;
       d1h_datomic_le                   : OUT   std_logic                  ;
       d1h_dsize                        : OUT   std_logic_vector(0 to 9)   ;
       d1h_ddata                        : OUT   std_logic_vector(0 to 1023);
       -- DMA port 1 Sent
       hd1_sent_utag_valid              : IN    std_logic                  ;
       hd1_sent_utag                    : IN    std_logic_vector(0 to 9)   ;
       hd1_sent_utag_sts                : IN    std_logic_vector(0 to 2)   ;
       -- DMA port 1 Completion
       hd1_cpl_valid                    : IN    std_logic                  ;
       hd1_cpl_utag                     : IN    std_logic_vector(0 to 9)   ;
       hd1_cpl_type                     : IN    std_logic_vector(0 to 2)   ;
       hd1_cpl_size                     : IN    std_logic_vector(0 to 9)   ;
       hd1_cpl_laddr                    : IN    std_logic_vector(0 to 6)   ;
       hd1_cpl_byte_count               : IN    std_logic_vector(0 to 9)   ;
       hd1_cpl_data                     : IN    std_logic_vector(0 to 1023);

#if defined(CONFIG_ENABLE_ETHERNET) && !defined(CONFIG_ENABLE_ETH_LOOP_BACK)
    gt_ref_clk_n                        : IN STD_LOGIC; 
    gt_ref_clk_p                        : IN STD_LOGIC;
    gt_rx_gt_port_0_n                   : IN STD_LOGIC;
    gt_rx_gt_port_0_p                   : IN STD_LOGIC;
    gt_rx_gt_port_1_n                   : IN STD_LOGIC;
    gt_rx_gt_port_1_p                   : IN STD_LOGIC;
    gt_rx_gt_port_2_n                   : IN STD_LOGIC;
    gt_rx_gt_port_2_p                   : IN STD_LOGIC;
    gt_rx_gt_port_3_n                   : IN STD_LOGIC;
    gt_rx_gt_port_3_p                   : IN STD_LOGIC;
    gt_tx_gt_port_0_n                   : OUT STD_LOGIC;
    gt_tx_gt_port_0_p                   : OUT STD_LOGIC;
    gt_tx_gt_port_1_n                   : OUT STD_LOGIC;
    gt_tx_gt_port_1_p                   : OUT STD_LOGIC;
    gt_tx_gt_port_2_n                   : OUT STD_LOGIC;
    gt_tx_gt_port_2_p                   : OUT STD_LOGIC;
    gt_tx_gt_port_3_n                   : OUT STD_LOGIC;
    gt_tx_gt_port_3_p                   : OUT STD_LOGIC;
#endif

    -- Parity Enable output and 250MHz Clock input
    ah_tbreq                            : OUT std_logic ;                       -- Timebase command request
    ah_paren                            : OUT   STD_LOGIC;
    ha_pclock                           : IN    STD_LOGIC;
    pci_user_reset                      : IN    std_logic;  --PCI hip user_reset signal if needed
    pci_clock_125MHz                    : IN    std_logic   --125MHz clock if needed
    -- 300MHz clock for HBM
--    refclk300_p                         : IN    std_logic;
--    refclk300_n                         : IN    std_logic
  );
END psl_accel;


ARCHITECTURE psl_accel OF psl_accel IS
  --
  -- SNAP CORE
  --
  COMPONENT snap_core
    PORT (
      ah_cvalid               : OUT STD_LOGIC;
      ah_ctag                 : OUT STD_LOGIC_VECTOR(0 TO 7);
      ah_com                  : OUT STD_LOGIC_VECTOR(0 TO 12);
      ah_cabt                 : OUT STD_LOGIC_VECTOR(0 TO 2);
      ah_cea                  : OUT STD_LOGIC_VECTOR(0 TO 63);
      ah_cch                  : OUT STD_LOGIC_VECTOR(0 TO 15);
      ah_csize                : OUT STD_LOGIC_VECTOR(0 TO 11);
      ha_croom                : IN  STD_LOGIC_VECTOR(0 TO 7);
      ah_ctagpar              : OUT STD_LOGIC;
      ah_compar               : OUT STD_LOGIC;
      ah_ceapar               : OUT STD_LOGIC;
      ha_brvalid              : IN  STD_LOGIC;
      ha_brtag                : IN  STD_LOGIC_VECTOR(0 TO 7);
      ha_brad                 : IN  STD_LOGIC_VECTOR(0 TO 5);
      ah_brlat                : OUT STD_LOGIC_VECTOR(0 TO 3);
      ah_brdata               : OUT STD_LOGIC_VECTOR(0 TO 1023);
      ah_brpar                : OUT STD_LOGIC_VECTOR(0 TO 15);
      ha_bwvalid              : IN  STD_LOGIC;
      ha_bwtag                : IN  STD_LOGIC_VECTOR(0 TO 7);
      ha_bwad                 : IN  STD_LOGIC_VECTOR(0 TO 5);
      ha_bwdata               : IN  STD_LOGIC_VECTOR(0 TO 1023);
      ha_bwpar                : IN  STD_LOGIC_VECTOR(0 TO 15);
      ha_brtagpar             : IN  STD_LOGIC;
      ha_bwtagpar             : IN  STD_LOGIC;
      ha_rvalid               : IN  STD_LOGIC;
      ha_rtag                 : IN  STD_LOGIC_VECTOR(0 TO 7);
      ha_rditag               : IN  STD_LOGIC_VECTOR(0 TO 8);
      ha_rditagpar            : IN  STD_LOGIC;
      ha_response             : IN  STD_LOGIC_VECTOR(0 TO 7);
      ha_response_ext         : IN  STD_LOGIC_VECTOR(0 TO 7);
      ha_rpagesize            : IN  STD_LOGIC_VECTOR(0 TO 3);
      ha_rcredits             : IN  STD_LOGIC_VECTOR(0 TO 8);
      ha_rcachestate          : IN  STD_LOGIC_VECTOR(0 TO 1);
      ha_rcachepos            : IN  STD_LOGIC_VECTOR(0 TO 12);
      ha_rtagpar              : IN  STD_LOGIC;
      ha_mmval                : IN  STD_LOGIC;
      ha_mmrnw                : IN  STD_LOGIC;
      ha_mmdw                 : IN  STD_LOGIC;
      ha_mmad                 : IN  STD_LOGIC_VECTOR(0 TO 23);
      ha_mmdata               : IN  STD_LOGIC_VECTOR(0 TO 63);
      ha_mmcfg                : IN  STD_LOGIC;
      ah_mmack                : OUT STD_LOGIC;
      ah_mmdata               : OUT STD_LOGIC_VECTOR(0 TO 63);
      ha_mmadpar              : IN  STD_LOGIC;
      ha_mmdatapar            : IN  STD_LOGIC;
      ah_mmdatapar            : OUT STD_LOGIC;
      ha_jval                 : IN  STD_LOGIC;
      ha_jcom                 : IN  STD_LOGIC_VECTOR(0 TO 7);
      ha_jea                  : IN  STD_LOGIC_VECTOR(0 TO 63);
      ah_jrunning             : OUT STD_LOGIC;
      ah_jdone                : OUT STD_LOGIC;
      ah_jcack                : OUT STD_LOGIC;
      ah_jerror               : OUT STD_LOGIC_VECTOR(0 TO 63);
      ah_tbreq                : OUT STD_LOGIC;
      ah_jyield               : OUT STD_LOGIC;
      ha_jeapar               : IN  STD_LOGIC;
      ha_jcompar              : IN  STD_LOGIC;
      ah_paren                : OUT STD_LOGIC;
      ha_pclock               : IN  STD_LOGIC;
      d0h_dvalid              : OUT std_logic                  ;
      d0h_req_utag            : OUT std_logic_vector(0 to 9)   ;
      d0h_req_itag            : OUT std_logic_vector(0 to 8)   ;
      d0h_dtype               : OUT std_logic_vector(0 to 2)   ;
      d0h_datomic_op          : OUT std_logic_vector(0 to 5)   ;
      d0h_datomic_le          : OUT std_logic                  ;
      d0h_dsize               : OUT std_logic_vector(0 to 9)   ;
      d0h_ddata               : OUT std_logic_vector(0 to 1023);
      hd0_sent_utag_valid     : IN  std_logic                  ;
      hd0_sent_utag           : IN  std_logic_vector(0 to 9)   ;
      hd0_sent_utag_sts       : IN  std_logic_vector(0 to 2)   ;
      hd0_cpl_valid           : IN  std_logic                  ;
      hd0_cpl_utag            : IN  std_logic_vector(0 to 9)   ;
      hd0_cpl_type            : IN  std_logic_vector(0 to 2)   ;
      hd0_cpl_size            : IN  std_logic_vector(0 to 9)   ;
      hd0_cpl_laddr           : IN  std_logic_vector(0 to 6)   ;
      hd0_cpl_byte_count      : IN  std_logic_vector(0 to 9)   ;
      hd0_cpl_data            : IN  std_logic_vector(0 to 1023);
      --
      -- ACTION Interface
      --
      -- misc
      action_reset            : OUT STD_LOGIC;
      --
      -- Kernel AXI Master Interface
      xk_d_o                  : OUT XK_D_T;
      kx_d_i                  : IN  KX_D_T;
      --
      -- Kernel AXI Slave Interface
      sk_d_o                  : OUT SK_D_T;
      ks_d_i                  : IN  KS_D_T
    );
  END COMPONENT;

  --
  -- ACTION WRAPPER
  --
  COMPONENT action_wrapper
    PORT (
      ap_clk                  : IN  STD_LOGIC;
      ap_rst_n                : IN  STD_LOGIC;
      interrupt_ack           : IN  STD_LOGIC;
      interrupt               : OUT STD_LOGIC;
      interrupt_src           : OUT STD_LOGIC_VECTOR(INT_BITS-2 DOWNTO 0);
      interrupt_ctx           : OUT STD_LOGIC_VECTOR(CONTEXT_BITS-1 DOWNTO 0);

#ifdef CONFIG_ENABLE_HBM
--CHANGE_HBM_INTERFACES_NUMBER
-- copy/paste these 45 signals for a new AXI interface
      m_axi_card_hbm_p0_AWVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p0_AWREADY : IN STD_LOGIC;
      m_axi_card_hbm_p0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_WVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p0_WREADY : IN STD_LOGIC;
      m_axi_card_hbm_p0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
      m_axi_card_hbm_p0_WLAST : OUT STD_LOGIC;
      m_axi_card_hbm_p0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_ARVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p0_ARREADY : IN STD_LOGIC;
      m_axi_card_hbm_p0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_RVALID : IN STD_LOGIC;
      m_axi_card_hbm_p0_RREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_RLAST : IN STD_LOGIC;
      m_axi_card_hbm_p0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_RUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p0_BVALID : IN STD_LOGIC;
      m_axi_card_hbm_p0_BREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_BUSER_WIDTH-1 downto 0);
--
      m_axi_card_hbm_p1_AWVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p1_AWREADY : IN STD_LOGIC;
      m_axi_card_hbm_p1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_WVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p1_WREADY : IN STD_LOGIC;
      m_axi_card_hbm_p1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
      m_axi_card_hbm_p1_WLAST : OUT STD_LOGIC;
      m_axi_card_hbm_p1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_ARVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p1_ARREADY : IN STD_LOGIC;
      m_axi_card_hbm_p1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_RVALID : IN STD_LOGIC;
      m_axi_card_hbm_p1_RREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_RLAST : IN STD_LOGIC;
      m_axi_card_hbm_p1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_RUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p1_BVALID : IN STD_LOGIC;
      m_axi_card_hbm_p1_BREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_BUSER_WIDTH-1 downto 0);
--
      m_axi_card_hbm_p2_AWVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p2_AWREADY : IN STD_LOGIC;
      m_axi_card_hbm_p2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_WVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p2_WREADY : IN STD_LOGIC;
      m_axi_card_hbm_p2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
      m_axi_card_hbm_p2_WLAST : OUT STD_LOGIC;
      m_axi_card_hbm_p2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_ARVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p2_ARREADY : IN STD_LOGIC;
      m_axi_card_hbm_p2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_RVALID : IN STD_LOGIC;
      m_axi_card_hbm_p2_RREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_RLAST : IN STD_LOGIC;
      m_axi_card_hbm_p2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_RUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p2_BVALID : IN STD_LOGIC;
      m_axi_card_hbm_p2_BREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_BUSER_WIDTH-1 downto 0);
--
      m_axi_card_hbm_p3_AWVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p3_AWREADY : IN STD_LOGIC;
      m_axi_card_hbm_p3_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p3_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_WVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p3_WREADY : IN STD_LOGIC;
      m_axi_card_hbm_p3_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
      m_axi_card_hbm_p3_WLAST : OUT STD_LOGIC;
      m_axi_card_hbm_p3_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_ARVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p3_ARREADY : IN STD_LOGIC;
      m_axi_card_hbm_p3_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p3_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_RVALID : IN STD_LOGIC;
      m_axi_card_hbm_p3_RREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p3_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_RLAST : IN STD_LOGIC;
      m_axi_card_hbm_p3_RID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_RUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p3_BVALID : IN STD_LOGIC;
      m_axi_card_hbm_p3_BREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p3_BID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p3_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_BUSER_WIDTH-1 downto 0);
-- 
      m_axi_card_hbm_p4_AWVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p4_AWREADY : IN STD_LOGIC;
      m_axi_card_hbm_p4_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p4_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p4_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p4_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p4_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p4_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p4_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p4_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p4_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_WVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p4_WREADY : IN STD_LOGIC;
      m_axi_card_hbm_p4_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
      m_axi_card_hbm_p4_WLAST : OUT STD_LOGIC;
      m_axi_card_hbm_p4_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_ARVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p4_ARREADY : IN STD_LOGIC;
      m_axi_card_hbm_p4_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p4_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p4_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p4_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p4_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p4_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p4_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p4_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p4_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_RVALID : IN STD_LOGIC;
      m_axi_card_hbm_p4_RREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p4_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_RLAST : IN STD_LOGIC;
      m_axi_card_hbm_p4_RID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_RUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p4_BVALID : IN STD_LOGIC;
      m_axi_card_hbm_p4_BREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p4_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p4_BID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p4_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_BUSER_WIDTH-1 downto 0);
--
      m_axi_card_hbm_p5_AWVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p5_AWREADY : IN STD_LOGIC;
      m_axi_card_hbm_p5_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p5_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p5_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p5_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p5_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p5_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p5_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p5_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p5_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_WVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p5_WREADY : IN STD_LOGIC;
      m_axi_card_hbm_p5_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
      m_axi_card_hbm_p5_WLAST : OUT STD_LOGIC;
      m_axi_card_hbm_p5_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_ARVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p5_ARREADY : IN STD_LOGIC;
      m_axi_card_hbm_p5_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p5_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p5_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p5_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p5_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p5_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p5_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p5_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p5_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_RVALID : IN STD_LOGIC;
      m_axi_card_hbm_p5_RREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p5_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_RLAST : IN STD_LOGIC;
      m_axi_card_hbm_p5_RID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_RUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p5_BVALID : IN STD_LOGIC;
      m_axi_card_hbm_p5_BREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p5_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p5_BID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p5_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_BUSER_WIDTH-1 downto 0);
--
      m_axi_card_hbm_p6_AWVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p6_AWREADY : IN STD_LOGIC;
      m_axi_card_hbm_p6_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p6_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p6_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p6_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p6_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p6_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p6_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p6_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p6_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_WVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p6_WREADY : IN STD_LOGIC;
      m_axi_card_hbm_p6_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
      m_axi_card_hbm_p6_WLAST : OUT STD_LOGIC;
      m_axi_card_hbm_p6_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_ARVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p6_ARREADY : IN STD_LOGIC;
      m_axi_card_hbm_p6_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p6_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p6_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p6_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p6_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p6_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p6_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p6_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p6_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_RVALID : IN STD_LOGIC;
      m_axi_card_hbm_p6_RREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p6_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_RLAST : IN STD_LOGIC;
      m_axi_card_hbm_p6_RID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_RUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p6_BVALID : IN STD_LOGIC;
      m_axi_card_hbm_p6_BREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p6_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p6_BID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p6_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_BUSER_WIDTH-1 downto 0);
--
      m_axi_card_hbm_p7_AWVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p7_AWREADY : IN STD_LOGIC;
      m_axi_card_hbm_p7_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p7_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p7_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p7_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p7_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p7_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p7_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p7_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p7_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_WVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p7_WREADY : IN STD_LOGIC;
      m_axi_card_hbm_p7_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
      m_axi_card_hbm_p7_WLAST : OUT STD_LOGIC;
      m_axi_card_hbm_p7_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_ARVALID : OUT STD_LOGIC;
      m_axi_card_hbm_p7_ARREADY : IN STD_LOGIC;
      m_axi_card_hbm_p7_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
      m_axi_card_hbm_p7_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p7_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p7_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p7_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p7_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
      m_axi_card_hbm_p7_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p7_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
      m_axi_card_hbm_p7_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_RVALID : IN STD_LOGIC;
      m_axi_card_hbm_p7_RREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p7_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_RLAST : IN STD_LOGIC;
      m_axi_card_hbm_p7_RID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_RUSER_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p7_BVALID : IN STD_LOGIC;
      m_axi_card_hbm_p7_BREADY : OUT STD_LOGIC;
      m_axi_card_hbm_p7_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
      m_axi_card_hbm_p7_BID : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
      m_axi_card_hbm_p7_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_BUSER_WIDTH-1 downto 0);
#endif

#if defined(CONFIG_ENABLE_ETHERNET) && !defined(CONFIG_ENABLE_ETH_LOOP_BACK)
    din_eth_TDATA            : IN STD_LOGIC_VECTOR (511 downto 0);
    din_eth_TVALID           : IN STD_LOGIC;
    din_eth_TREADY           : OUT STD_LOGIC;
    din_eth_TKEEP            : IN STD_LOGIC_VECTOR (63 downto 0);
    din_eth_TUSER            : IN STD_LOGIC_VECTOR (0 downto 0);
    din_eth_TLAST            : IN STD_LOGIC;
-- Enable for ethernet TX
    dout_eth_TDATA           : OUT STD_LOGIC_VECTOR (511 downto 0);
    dout_eth_TVALID          : OUT STD_LOGIC;
    dout_eth_TREADY          : IN STD_LOGIC;
    dout_eth_TKEEP           : OUT STD_LOGIC_VECTOR (63 downto 0);
    dout_eth_TUSER           : OUT STD_LOGIC_VECTOR (0 downto 0);
    dout_eth_TLAST           : OUT STD_LOGIC;
#endif
    --
      -- AXI Control Register Interface
      s_axi_ctrl_reg_araddr   : IN  STD_LOGIC_VECTOR ( C_AXI_CTRL_REG_ADDR_WIDTH-1 DOWNTO 0 );
      s_axi_ctrl_reg_arready  : OUT STD_LOGIC;
      s_axi_ctrl_reg_arvalid  : IN  STD_LOGIC;
      s_axi_ctrl_reg_awaddr   : IN  STD_LOGIC_VECTOR ( C_AXI_CTRL_REG_ADDR_WIDTH-1 DOWNTO 0 );
      s_axi_ctrl_reg_awready  : OUT STD_LOGIC;
      s_axi_ctrl_reg_awvalid  : IN  STD_LOGIC;
      s_axi_ctrl_reg_bready   : IN  STD_LOGIC;
      s_axi_ctrl_reg_bresp    : OUT STD_LOGIC_VECTOR ( 1 DOWNTO 0 );
      s_axi_ctrl_reg_bvalid   : OUT STD_LOGIC;
      s_axi_ctrl_reg_rdata    : OUT STD_LOGIC_VECTOR ( C_AXI_CTRL_REG_DATA_WIDTH-1 DOWNTO 0 );
      s_axi_ctrl_reg_rready   : IN  STD_LOGIC;
      s_axi_ctrl_reg_rresp    : OUT STD_LOGIC_VECTOR ( 1 DOWNTO 0 );
      s_axi_ctrl_reg_rvalid   : OUT STD_LOGIC;
      s_axi_ctrl_reg_wdata    : IN  STD_LOGIC_VECTOR ( C_AXI_CTRL_REG_DATA_WIDTH-1 DOWNTO 0 );
      s_axi_ctrl_reg_wready   : OUT STD_LOGIC;
      s_axi_ctrl_reg_wstrb    : IN  STD_LOGIC_VECTOR ( (C_AXI_CTRL_REG_DATA_WIDTH/8)-1 DOWNTO 0 );
      s_axi_ctrl_reg_wvalid   : IN  STD_LOGIC;
      --
      -- AXI Host Memory Interface
      m_axi_host_mem_araddr   : OUT STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_ADDR_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_arburst  : OUT STD_LOGIC_VECTOR ( 1 DOWNTO 0 );
      m_axi_host_mem_arcache  : OUT STD_LOGIC_VECTOR ( 3 DOWNTO 0 );
      m_axi_host_mem_arid     : OUT STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_ID_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_arlen    : OUT STD_LOGIC_VECTOR ( 7 DOWNTO 0 );
      m_axi_host_mem_arlock   : OUT STD_LOGIC_VECTOR ( 1 DOWNTO 0 );
      m_axi_host_mem_arprot   : OUT STD_LOGIC_VECTOR ( 2 DOWNTO 0 );
      m_axi_host_mem_arqos    : OUT STD_LOGIC_VECTOR ( 3 DOWNTO 0 );
      m_axi_host_mem_arready  : IN  STD_LOGIC;
      m_axi_host_mem_arregion : OUT STD_LOGIC_VECTOR ( 3 DOWNTO 0 );
      m_axi_host_mem_arsize   : OUT STD_LOGIC_VECTOR ( 2 DOWNTO 0 );
      m_axi_host_mem_aruser   : OUT STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_ARUSER_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_arvalid  : OUT STD_LOGIC;
      m_axi_host_mem_awaddr   : OUT STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_ADDR_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_awburst  : OUT STD_LOGIC_VECTOR ( 1 DOWNTO 0 );
      m_axi_host_mem_awcache  : OUT STD_LOGIC_VECTOR ( 3 DOWNTO 0 );
      m_axi_host_mem_awid     : OUT STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_ID_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_awlen    : OUT STD_LOGIC_VECTOR ( 7 DOWNTO 0 );
      m_axi_host_mem_awlock   : OUT STD_LOGIC_VECTOR ( 1 DOWNTO 0 );
      m_axi_host_mem_awprot   : OUT STD_LOGIC_VECTOR ( 2 DOWNTO 0 );
      m_axi_host_mem_awqos    : OUT STD_LOGIC_VECTOR ( 3 DOWNTO 0 );
      m_axi_host_mem_awready  : IN  STD_LOGIC;
      m_axi_host_mem_awregion : OUT STD_LOGIC_VECTOR ( 3 DOWNTO 0 );
      m_axi_host_mem_awsize   : OUT STD_LOGIC_VECTOR ( 2 DOWNTO 0 );
      m_axi_host_mem_awuser   : OUT STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_AWUSER_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_awvalid  : OUT STD_LOGIC;
      m_axi_host_mem_bid      : IN  STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_ID_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_bready   : OUT STD_LOGIC;
      m_axi_host_mem_bresp    : IN  STD_LOGIC_VECTOR ( 1 DOWNTO 0 );
      m_axi_host_mem_buser    : IN  STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_BUSER_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_bvalid   : IN  STD_LOGIC;
      m_axi_host_mem_rdata    : IN  STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_DATA_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_rid      : IN  STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_ID_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_rlast    : IN  STD_LOGIC;
      m_axi_host_mem_rready   : OUT STD_LOGIC;
      m_axi_host_mem_rresp    : IN  STD_LOGIC_VECTOR ( 1 DOWNTO 0 );
      m_axi_host_mem_ruser    : IN  STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_RUSER_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_rvalid   : IN  STD_LOGIC;
      m_axi_host_mem_wdata    : OUT STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_DATA_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_wlast    : OUT STD_LOGIC;
      m_axi_host_mem_wready   : IN  STD_LOGIC;
      m_axi_host_mem_wstrb    : OUT STD_LOGIC_VECTOR ( (C_AXI_HOST_MEM_DATA_WIDTH/8)-1 DOWNTO 0 );
      m_axi_host_mem_wuser    : OUT STD_LOGIC_VECTOR ( C_AXI_HOST_MEM_WUSER_WIDTH-1 DOWNTO 0 );
      m_axi_host_mem_wvalid   : OUT STD_LOGIC
    );
  END COMPONENT;

#if defined(CONFIG_ENABLE_ETHERNET) && !defined(CONFIG_ENABLE_ETH_LOOP_BACK)
  --
  -- ETHERNET 100G
  --
    COMPONENT eth_100G
    PORT(
    i_ctl_rx_enable : in STD_LOGIC;
    i_ctl_tx_enable : in STD_LOGIC;

    i_ctl_rx_rsfec_enable : in STD_LOGIC;
    i_ctl_tx_rsfec_enable : in STD_LOGIC;

    i_capi_clk : in STD_LOGIC;

    i_core_rx_reset : in STD_LOGIC;
    i_core_tx_reset : in STD_LOGIC;

    i_sys_reset : in STD_LOGIC;

    i_gt_rx_gt_port_0_n : in STD_LOGIC;
    i_gt_rx_gt_port_0_p : in STD_LOGIC;
    i_gt_rx_gt_port_1_n : in STD_LOGIC;
    i_gt_rx_gt_port_1_p : in STD_LOGIC;
    i_gt_rx_gt_port_2_n : in STD_LOGIC;
    i_gt_rx_gt_port_2_p : in STD_LOGIC;
    i_gt_rx_gt_port_3_n : in STD_LOGIC;
    i_gt_rx_gt_port_3_p : in STD_LOGIC;

    o_gt_tx_gt_port_0_n : out STD_LOGIC;
    o_gt_tx_gt_port_0_p : out STD_LOGIC;
    o_gt_tx_gt_port_1_n : out STD_LOGIC;
    o_gt_tx_gt_port_1_p : out STD_LOGIC;
    o_gt_tx_gt_port_2_n : out STD_LOGIC;
    o_gt_tx_gt_port_2_p : out STD_LOGIC;
    o_gt_tx_gt_port_3_n : out STD_LOGIC;
    o_gt_tx_gt_port_3_p : out STD_LOGIC;

    i_gt_ref_clk_n : in STD_LOGIC;
    i_gt_ref_clk_p : in STD_LOGIC;

-- Enable for ethernet TX
    s_axis_tx_tdata : in STD_LOGIC_VECTOR ( 511 downto 0 );
    s_axis_tx_tkeep : in STD_LOGIC_VECTOR ( 63 downto 0 );
    s_axis_tx_tlast : in STD_LOGIC;
    s_axis_tx_tready : out STD_LOGIC;
    s_axis_tx_tuser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tx_tvalid : in STD_LOGIC;

    m_axis_rx_tdata : out STD_LOGIC_VECTOR ( 511 downto 0 );
    m_axis_rx_tkeep : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axis_rx_tlast : out STD_LOGIC;
    m_axis_rx_tready : in STD_LOGIC;
    m_axis_rx_tuser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_rx_tvalid : out STD_LOGIC
    );
    END COMPONENT;

#endif
SIGNAL tmp_sdram_axi_rid              : STD_LOGIC_VECTOR (5 downto 0);
SIGNAL tmp_sdram_axi_bid              : STD_LOGIC_VECTOR (5 downto 0);
#ifdef CONFIG_ENABLE_BRAM
  --
  -- BLOCK RAM
  --
  COMPONENT block_RAM
    PORT (
      s_aclk              : IN  STD_LOGIC;
      s_aresetn           : IN  STD_LOGIC;
      s_axi_awid          : IN  STD_LOGIC_VECTOR(C_AXI_CARD_MEM0_ID_WIDTH-1 DOWNTO 0);
      s_axi_awaddr        : IN  STD_LOGIC_VECTOR(31 DOWNTO 0);
      s_axi_awlen         : IN  STD_LOGIC_VECTOR(7 DOWNTO 0);
      s_axi_awsize        : IN  STD_LOGIC_VECTOR(2 DOWNTO 0);
      s_axi_awburst       : IN  STD_LOGIC_VECTOR(1 DOWNTO 0);
      s_axi_awvalid       : IN  STD_LOGIC;
      s_axi_awready       : OUT STD_LOGIC;
      s_axi_wdata         : IN  STD_LOGIC_VECTOR(255 DOWNTO 0);
      s_axi_wstrb         : IN  STD_LOGIC_VECTOR((C_AXI_HOST_MEM_DATA_WIDTH/16)-1 DOWNTO 0);
      s_axi_wlast         : IN  STD_LOGIC;
      s_axi_wvalid        : IN  STD_LOGIC;
      s_axi_wready        : OUT STD_LOGIC;
      s_axi_bid           : OUT STD_LOGIC_VECTOR(C_AXI_CARD_MEM0_ID_WIDTH-1 DOWNTO 0);
      s_axi_bresp         : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      s_axi_bvalid        : OUT STD_LOGIC;
      s_axi_bready        : IN  STD_LOGIC;
      s_axi_arid          : IN  STD_LOGIC_VECTOR(C_AXI_CARD_MEM0_ID_WIDTH-1 DOWNTO 0);
      s_axi_araddr        : IN  STD_LOGIC_VECTOR(31 DOWNTO 0);
      s_axi_arlen         : IN  STD_LOGIC_VECTOR(7 DOWNTO 0);
      s_axi_arsize        : IN  STD_LOGIC_VECTOR(2 DOWNTO 0);
      s_axi_arburst       : IN  STD_LOGIC_VECTOR(1 DOWNTO 0);
      s_axi_arvalid       : IN  STD_LOGIC;
      s_axi_arready       : OUT STD_LOGIC;
      s_axi_rid           : OUT STD_LOGIC_VECTOR(C_AXI_CARD_MEM0_ID_WIDTH-1 DOWNTO 0);
      s_axi_rdata         : OUT STD_LOGIC_VECTOR(255 DOWNTO 0);
      s_axi_rresp         : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
      s_axi_rlast         : OUT STD_LOGIC;
      s_axi_rvalid        : OUT STD_LOGIC;
      s_axi_rready        : IN  STD_LOGIC
    );
  END COMPONENT;
#endif


  --
  -- SIGNALS
  --
  SIGNAL action_reset                   : STD_LOGIC;
  SIGNAL action_reset_n_q               : STD_LOGIC;
  SIGNAL pci_user_reset_q               : STD_LOGIC;
  SIGNAL pci_user_reset_qq              : STD_LOGIC;
  SIGNAL xk_d                           : XK_D_T;
  SIGNAL kx_d                           : KX_D_T;
  SIGNAL sk_d                           : SK_D_T;
  SIGNAL ks_d                           : KS_D_T;
  signal xn_d                           : XN_D_T;
  signal nx_d                           : NX_D_T := ('0','0', "00",'0','0', (31 downto 0 => '0'),
                                                     "00",'0');
#ifdef CONFIG_ENABLE_HBM
  -- HBM
  COMPONENT hbm_top_wrapper is
  PORT (
    ARESETN                             : in STD_LOGIC;
--CHANGE_HBM_INTERFACES_NUMBER
-- copy/paste these 36 signals for a new AXI interface
    S_AXI_p0_HBM_ACLK : in STD_LOGIC;
    S_AXI_p0_HBM_araddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p0_HBM_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p0_HBM_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p0_HBM_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p0_HBM_arlock : in STD_LOGIC;
    S_AXI_p0_HBM_awlock : in STD_LOGIC;
#else
    S_AXI_p0_HBM_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p0_HBM_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p0_HBM_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p0_HBM_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p0_HBM_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p0_HBM_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
#endif
    S_AXI_p0_HBM_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p0_HBM_arready : out STD_LOGIC;
    S_AXI_p0_HBM_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p0_HBM_arvalid : in STD_LOGIC;
    S_AXI_p0_HBM_awaddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p0_HBM_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p0_HBM_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p0_HBM_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_p0_HBM_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p0_HBM_awready : out STD_LOGIC;
    S_AXI_p0_HBM_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p0_HBM_awvalid : in STD_LOGIC;
    S_AXI_p0_HBM_bready : in STD_LOGIC;
    S_AXI_p0_HBM_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p0_HBM_bvalid : out STD_LOGIC;
    S_AXI_p0_HBM_rdata : out STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p0_HBM_rlast : out STD_LOGIC;
    S_AXI_p0_HBM_rready : in STD_LOGIC;
    S_AXI_p0_HBM_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p0_HBM_rvalid : out STD_LOGIC;
    S_AXI_p0_HBM_wdata : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p0_HBM_wlast : in STD_LOGIC;
    S_AXI_p0_HBM_wready : out STD_LOGIC;
    S_AXI_p0_HBM_wstrb : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0 );
    S_AXI_p0_HBM_wvalid : in STD_LOGIC;

    S_AXI_p1_HBM_ACLK : in STD_LOGIC;
    S_AXI_p1_HBM_araddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p1_HBM_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p1_HBM_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p1_HBM_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p1_HBM_awlock : in STD_LOGIC;
    S_AXI_p1_HBM_arlock : in STD_LOGIC;
#else
    S_AXI_p1_HBM_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p1_HBM_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p1_HBM_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p1_HBM_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p1_HBM_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p1_HBM_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
#endif
    S_AXI_p1_HBM_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p1_HBM_arready : out STD_LOGIC;
    S_AXI_p1_HBM_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p1_HBM_arvalid : in STD_LOGIC;
    S_AXI_p1_HBM_awaddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p1_HBM_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p1_HBM_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p1_HBM_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_p1_HBM_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p1_HBM_awready : out STD_LOGIC;
    S_AXI_p1_HBM_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p1_HBM_awvalid : in STD_LOGIC;
    S_AXI_p1_HBM_bready : in STD_LOGIC;
    S_AXI_p1_HBM_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p1_HBM_bvalid : out STD_LOGIC;
    S_AXI_p1_HBM_rdata : out STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p1_HBM_rlast : out STD_LOGIC;
    S_AXI_p1_HBM_rready : in STD_LOGIC;
    S_AXI_p1_HBM_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p1_HBM_rvalid : out STD_LOGIC;
    S_AXI_p1_HBM_wdata : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p1_HBM_wlast : in STD_LOGIC;
    S_AXI_p1_HBM_wready : out STD_LOGIC;
    S_AXI_p1_HBM_wstrb : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0 );
    S_AXI_p1_HBM_wvalid : in STD_LOGIC;
--
    S_AXI_p2_HBM_ACLK : in STD_LOGIC;
    S_AXI_p2_HBM_araddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p2_HBM_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p2_HBM_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p2_HBM_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p2_HBM_arlock : in STD_LOGIC;
    S_AXI_p2_HBM_awlock : in STD_LOGIC;
#else
    S_AXI_p2_HBM_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p2_HBM_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p2_HBM_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p2_HBM_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p2_HBM_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p2_HBM_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
#endif
    S_AXI_p2_HBM_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p2_HBM_arready : out STD_LOGIC;
    S_AXI_p2_HBM_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p2_HBM_arvalid : in STD_LOGIC;
    S_AXI_p2_HBM_awaddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p2_HBM_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p2_HBM_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p2_HBM_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_p2_HBM_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p2_HBM_awready : out STD_LOGIC;
    S_AXI_p2_HBM_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p2_HBM_awvalid : in STD_LOGIC;
    S_AXI_p2_HBM_bready : in STD_LOGIC;
    S_AXI_p2_HBM_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p2_HBM_bvalid : out STD_LOGIC;
    S_AXI_p2_HBM_rdata : out STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p2_HBM_rlast : out STD_LOGIC;
    S_AXI_p2_HBM_rready : in STD_LOGIC;
    S_AXI_p2_HBM_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p2_HBM_rvalid : out STD_LOGIC;
    S_AXI_p2_HBM_wdata : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p2_HBM_wlast : in STD_LOGIC;
    S_AXI_p2_HBM_wready : out STD_LOGIC;
    S_AXI_p2_HBM_wstrb : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0 );
    S_AXI_p2_HBM_wvalid : in STD_LOGIC;
--
    S_AXI_p3_HBM_ACLK : in STD_LOGIC;
    S_AXI_p3_HBM_araddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p3_HBM_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p3_HBM_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p3_HBM_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p3_HBM_arlock : in STD_LOGIC;
    S_AXI_p3_HBM_awlock : in STD_LOGIC;
#else
    S_AXI_p3_HBM_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p3_HBM_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p3_HBM_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p3_HBM_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p3_HBM_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p3_HBM_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
#endif
    S_AXI_p3_HBM_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p3_HBM_arready : out STD_LOGIC;
    S_AXI_p3_HBM_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p3_HBM_arvalid : in STD_LOGIC;
    S_AXI_p3_HBM_awaddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p3_HBM_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p3_HBM_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p3_HBM_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_p3_HBM_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p3_HBM_awready : out STD_LOGIC;
    S_AXI_p3_HBM_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p3_HBM_awvalid : in STD_LOGIC;
    S_AXI_p3_HBM_bready : in STD_LOGIC;
    S_AXI_p3_HBM_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p3_HBM_bvalid : out STD_LOGIC;
    S_AXI_p3_HBM_rdata : out STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p3_HBM_rlast : out STD_LOGIC;
    S_AXI_p3_HBM_rready : in STD_LOGIC;
    S_AXI_p3_HBM_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p3_HBM_rvalid : out STD_LOGIC;
    S_AXI_p3_HBM_wdata : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p3_HBM_wlast : in STD_LOGIC;
    S_AXI_p3_HBM_wready : out STD_LOGIC;
    S_AXI_p3_HBM_wstrb : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0 );
    S_AXI_p3_HBM_wvalid : in STD_LOGIC;
--
    S_AXI_p4_HBM_ACLK : in STD_LOGIC;
    S_AXI_p4_HBM_araddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p4_HBM_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p4_HBM_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p4_HBM_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p4_HBM_arlock : in STD_LOGIC;
    S_AXI_p4_HBM_awlock : in STD_LOGIC;
#else
    S_AXI_p4_HBM_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p4_HBM_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p4_HBM_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p4_HBM_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p4_HBM_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p4_HBM_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
#endif
    S_AXI_p4_HBM_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p4_HBM_arready : out STD_LOGIC;
    S_AXI_p4_HBM_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p4_HBM_arvalid : in STD_LOGIC;
    S_AXI_p4_HBM_awaddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p4_HBM_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p4_HBM_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p4_HBM_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_p4_HBM_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p4_HBM_awready : out STD_LOGIC;
    S_AXI_p4_HBM_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p4_HBM_awvalid : in STD_LOGIC;
    S_AXI_p4_HBM_bready : in STD_LOGIC;
    S_AXI_p4_HBM_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p4_HBM_bvalid : out STD_LOGIC;
    S_AXI_p4_HBM_rdata : out STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p4_HBM_rlast : out STD_LOGIC;
    S_AXI_p4_HBM_rready : in STD_LOGIC;
    S_AXI_p4_HBM_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p4_HBM_rvalid : out STD_LOGIC;
    S_AXI_p4_HBM_wdata : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p4_HBM_wlast : in STD_LOGIC;
    S_AXI_p4_HBM_wready : out STD_LOGIC;
    S_AXI_p4_HBM_wstrb : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0 );
    S_AXI_p4_HBM_wvalid : in STD_LOGIC;

    S_AXI_p5_HBM_ACLK : in STD_LOGIC;
    S_AXI_p5_HBM_araddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p5_HBM_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p5_HBM_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p5_HBM_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p5_HBM_arlock : in STD_LOGIC;
    S_AXI_p5_HBM_awlock : in STD_LOGIC;
#else
    S_AXI_p5_HBM_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p5_HBM_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p5_HBM_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p5_HBM_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p5_HBM_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p5_HBM_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
#endif
    S_AXI_p5_HBM_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p5_HBM_arready : out STD_LOGIC;
    S_AXI_p5_HBM_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p5_HBM_arvalid : in STD_LOGIC;
    S_AXI_p5_HBM_awaddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p5_HBM_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p5_HBM_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p5_HBM_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_p5_HBM_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p5_HBM_awready : out STD_LOGIC;
    S_AXI_p5_HBM_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p5_HBM_awvalid : in STD_LOGIC;
    S_AXI_p5_HBM_bready : in STD_LOGIC;
    S_AXI_p5_HBM_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p5_HBM_bvalid : out STD_LOGIC;
    S_AXI_p5_HBM_rdata : out STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p5_HBM_rlast : out STD_LOGIC;
    S_AXI_p5_HBM_rready : in STD_LOGIC;
    S_AXI_p5_HBM_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p5_HBM_rvalid : out STD_LOGIC;
    S_AXI_p5_HBM_wdata : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p5_HBM_wlast : in STD_LOGIC;
    S_AXI_p5_HBM_wready : out STD_LOGIC;
    S_AXI_p5_HBM_wstrb : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0 );
    S_AXI_p5_HBM_wvalid : in STD_LOGIC;
--
    S_AXI_p6_HBM_ACLK : in STD_LOGIC;
    S_AXI_p6_HBM_araddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p6_HBM_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p6_HBM_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p6_HBM_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p6_HBM_arlock : in STD_LOGIC;
    S_AXI_p6_HBM_awlock : in STD_LOGIC;
#else
    S_AXI_p6_HBM_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p6_HBM_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p6_HBM_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p6_HBM_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p6_HBM_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p6_HBM_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
#endif
    S_AXI_p6_HBM_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p6_HBM_arready : out STD_LOGIC;
    S_AXI_p6_HBM_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p6_HBM_arvalid : in STD_LOGIC;
    S_AXI_p6_HBM_awaddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p6_HBM_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p6_HBM_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p6_HBM_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_p6_HBM_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p6_HBM_awready : out STD_LOGIC;
    S_AXI_p6_HBM_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p6_HBM_awvalid : in STD_LOGIC;
    S_AXI_p6_HBM_bready : in STD_LOGIC;
    S_AXI_p6_HBM_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p6_HBM_bvalid : out STD_LOGIC;
    S_AXI_p6_HBM_rdata : out STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p6_HBM_rlast : out STD_LOGIC;
    S_AXI_p6_HBM_rready : in STD_LOGIC;
    S_AXI_p6_HBM_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p6_HBM_rvalid : out STD_LOGIC;
    S_AXI_p6_HBM_wdata : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p6_HBM_wlast : in STD_LOGIC;
    S_AXI_p6_HBM_wready : out STD_LOGIC;
    S_AXI_p6_HBM_wstrb : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0 );
    S_AXI_p6_HBM_wvalid : in STD_LOGIC;
--
    S_AXI_p7_HBM_ACLK : in STD_LOGIC;
    S_AXI_p7_HBM_araddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p7_HBM_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p7_HBM_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p7_HBM_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p7_HBM_arlock : in STD_LOGIC;
    S_AXI_p7_HBM_awlock : in STD_LOGIC;
#else
    S_AXI_p7_HBM_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p7_HBM_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    S_AXI_p7_HBM_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p7_HBM_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p7_HBM_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p7_HBM_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
#endif
    S_AXI_p7_HBM_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p7_HBM_arready : out STD_LOGIC;
    S_AXI_p7_HBM_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p7_HBM_arvalid : in STD_LOGIC;
    S_AXI_p7_HBM_awaddr : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 );
    S_AXI_p7_HBM_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p7_HBM_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S_AXI_p7_HBM_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    S_AXI_p7_HBM_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p7_HBM_awready : out STD_LOGIC;
    S_AXI_p7_HBM_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    S_AXI_p7_HBM_awvalid : in STD_LOGIC;
    S_AXI_p7_HBM_bready : in STD_LOGIC;
    S_AXI_p7_HBM_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p7_HBM_bvalid : out STD_LOGIC;
    S_AXI_p7_HBM_rdata : out STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p7_HBM_rlast : out STD_LOGIC;
    S_AXI_p7_HBM_rready : in STD_LOGIC;
    S_AXI_p7_HBM_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    S_AXI_p7_HBM_rvalid : out STD_LOGIC;
    S_AXI_p7_HBM_wdata : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0 );
    S_AXI_p7_HBM_wlast : in STD_LOGIC;
    S_AXI_p7_HBM_wready : out STD_LOGIC;
    S_AXI_p7_HBM_wstrb : in STD_LOGIC_VECTOR ( C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0 );
    S_AXI_p7_HBM_wvalid : in STD_LOGIC
--
--    refclk300_n                         : in STD_LOGIC;
--    refclk300_p                         : in STD_LOGIC
  );
  END COMPONENT;
#endif

#ifdef CONFIG_ENABLE_HBM
--HBM
--CHANGE_HBM_INTERFACES_NUMBER
-- copy/paste these 43 signals for a new AXI interface
    SIGNAL m_axi_card_hbm_p0_AWVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p0_AWREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p0_AWADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p0_AWID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p0_AWLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p0_AWSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p0_AWBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p0_AWLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p0_AWCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p0_AWPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p0_AWQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p0_AWREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p0_AWUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p0_WVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p0_WREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p0_WDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p0_WSTRB      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
    SIGNAL m_axi_card_hbm_p0_WLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p0_WID        : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p0_WUSER      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p0_ARVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p0_ARREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p0_ARADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p0_ARID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p0_ARLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p0_ARSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p0_ARBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p0_ARLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p0_ARCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p0_ARPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p0_ARQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p0_ARREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p0_ARUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p0_RVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p0_RREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p0_RDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p0_RLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p0_RRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p0_BVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p0_BREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p0_BRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p0_arlock_01  : STD_LOGIC_VECTOR (0 downto 0);
    SIGNAL m_axi_card_hbm_p0_awlock_01  : STD_LOGIC_VECTOR (0 downto 0);
--
    SIGNAL m_axi_card_hbm_p1_AWVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p1_AWREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p1_AWADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p1_AWID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p1_AWLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p1_AWSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p1_AWBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p1_AWLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p1_AWCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p1_AWPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p1_AWQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p1_AWREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p1_AWUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p1_WVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p1_WREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p1_WDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p1_WSTRB      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
    SIGNAL m_axi_card_hbm_p1_WLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p1_WID        : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p1_WUSER      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p1_ARVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p1_ARREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p1_ARADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p1_ARID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p1_ARLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p1_ARSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p1_ARBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p1_ARLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p1_ARCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p1_ARPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p1_ARQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p1_ARREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p1_ARUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p1_RVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p1_RREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p1_RDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p1_RLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p1_RRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p1_BVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p1_BREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p1_BRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p1_arlock_01  : STD_LOGIC_VECTOR (0 downto 0);
    SIGNAL m_axi_card_hbm_p1_awlock_01  : STD_LOGIC_VECTOR (0 downto 0);
--
    SIGNAL m_axi_card_hbm_p2_AWVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p2_AWREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p2_AWADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p2_AWID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p2_AWLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p2_AWSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p2_AWBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p2_AWLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p2_AWCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p2_AWPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p2_AWQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p2_AWREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p2_AWUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p2_WVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p2_WREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p2_WDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p2_WSTRB      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
    SIGNAL m_axi_card_hbm_p2_WLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p2_WID        : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p2_WUSER      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p2_ARVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p2_ARREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p2_ARADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p2_ARID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p2_ARLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p2_ARSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p2_ARBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p2_ARLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p2_ARCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p2_ARPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p2_ARQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p2_ARREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p2_ARUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p2_RVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p2_RREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p2_RDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p2_RLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p2_RRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p2_BVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p2_BREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p2_BRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p2_arlock_01  : STD_LOGIC_VECTOR (0 downto 0);
    SIGNAL m_axi_card_hbm_p2_awlock_01  : STD_LOGIC_VECTOR (0 downto 0);
--
    SIGNAL m_axi_card_hbm_p3_AWVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p3_AWREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p3_AWADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p3_AWID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p3_AWLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p3_AWSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p3_AWBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p3_AWLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p3_AWCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p3_AWPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p3_AWQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p3_AWREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p3_AWUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p3_WVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p3_WREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p3_WDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p3_WSTRB      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
    SIGNAL m_axi_card_hbm_p3_WLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p3_WID        : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p3_WUSER      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p3_ARVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p3_ARREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p3_ARADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p3_ARID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p3_ARLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p3_ARSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p3_ARBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p3_ARLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p3_ARCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p3_ARPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p3_ARQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p3_ARREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p3_ARUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p3_RVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p3_RREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p3_RDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p3_RLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p3_RRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p3_BVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p3_BREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p3_BRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p3_arlock_01  : STD_LOGIC_VECTOR (0 downto 0);
    SIGNAL m_axi_card_hbm_p3_awlock_01  : STD_LOGIC_VECTOR (0 downto 0);
-- 
    SIGNAL m_axi_card_hbm_p4_AWVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p4_AWREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p4_AWADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p4_AWID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p4_AWLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p4_AWSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p4_AWBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p4_AWLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p4_AWCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p4_AWPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p4_AWQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p4_AWREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p4_AWUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p4_WVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p4_WREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p4_WDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p4_WSTRB      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
    SIGNAL m_axi_card_hbm_p4_WLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p4_WID        : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p4_WUSER      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p4_ARVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p4_ARREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p4_ARADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p4_ARID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p4_ARLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p4_ARSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p4_ARBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p4_ARLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p4_ARCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p4_ARPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p4_ARQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p4_ARREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p4_ARUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p4_RVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p4_RREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p4_RDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p4_RLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p4_RRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p4_BVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p4_BREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p4_BRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p4_arlock_01  : STD_LOGIC_VECTOR (0 downto 0);
    SIGNAL m_axi_card_hbm_p4_awlock_01  : STD_LOGIC_VECTOR (0 downto 0);
--
    SIGNAL m_axi_card_hbm_p5_AWVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p5_AWREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p5_AWADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p5_AWID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p5_AWLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p5_AWSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p5_AWBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p5_AWLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p5_AWCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p5_AWPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p5_AWQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p5_AWREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p5_AWUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p5_WVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p5_WREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p5_WDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p5_WSTRB      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
    SIGNAL m_axi_card_hbm_p5_WLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p5_WID        : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p5_WUSER      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p5_ARVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p5_ARREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p5_ARADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p5_ARID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p5_ARLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p5_ARSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p5_ARBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p5_ARLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p5_ARCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p5_ARPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p5_ARQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p5_ARREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p5_ARUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p5_RVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p5_RREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p5_RDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p5_RLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p5_RRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p5_BVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p5_BREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p5_BRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p5_arlock_01  : STD_LOGIC_VECTOR (0 downto 0);
    SIGNAL m_axi_card_hbm_p5_awlock_01  : STD_LOGIC_VECTOR (0 downto 0);
--
    SIGNAL m_axi_card_hbm_p6_AWVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p6_AWREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p6_AWADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p6_AWID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p6_AWLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p6_AWSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p6_AWBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p6_AWLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p6_AWCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p6_AWPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p6_AWQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p6_AWREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p6_AWUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p6_WVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p6_WREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p6_WDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p6_WSTRB      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
    SIGNAL m_axi_card_hbm_p6_WLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p6_WID        : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p6_WUSER      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p6_ARVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p6_ARREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p6_ARADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p6_ARID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p6_ARLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p6_ARSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p6_ARBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p6_ARLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p6_ARCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p6_ARPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p6_ARQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p6_ARREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p6_ARUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p6_RVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p6_RREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p6_RDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p6_RLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p6_RRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p6_BVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p6_BREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p6_BRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p6_arlock_01  : STD_LOGIC_VECTOR (0 downto 0);
    SIGNAL m_axi_card_hbm_p6_awlock_01  : STD_LOGIC_VECTOR (0 downto 0);
--
    SIGNAL m_axi_card_hbm_p7_AWVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p7_AWREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p7_AWADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p7_AWID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p7_AWLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p7_AWSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p7_AWBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p7_AWLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p7_AWCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p7_AWPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p7_AWQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p7_AWREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p7_AWUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_AWUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p7_WVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p7_WREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p7_WDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p7_WSTRB      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH/8-1 downto 0);
    SIGNAL m_axi_card_hbm_p7_WLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p7_WID        : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p7_WUSER      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_WUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p7_ARVALID    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p7_ARREADY    : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p7_ARADDR     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ADDR_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p7_ARID       : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ID_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p7_ARLEN      : STD_LOGIC_VECTOR (7 downto 0);
    SIGNAL m_axi_card_hbm_p7_ARSIZE     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p7_ARBURST    : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p7_ARLOCK     : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p7_ARCACHE    : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p7_ARPROT     : STD_LOGIC_VECTOR (2 downto 0);
    SIGNAL m_axi_card_hbm_p7_ARQOS      : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p7_ARREGION   : STD_LOGIC_VECTOR (3 downto 0);
    SIGNAL m_axi_card_hbm_p7_ARUSER     : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_ARUSER_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p7_RVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p7_RREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p7_RDATA      : STD_LOGIC_VECTOR (C_M_AXI_CARD_HBM_DATA_WIDTH-1 downto 0);
    SIGNAL m_axi_card_hbm_p7_RLAST      : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p7_RRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p7_BVALID     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p7_BREADY     : STD_LOGIC;
    SIGNAL m_axi_card_hbm_p7_BRESP      : STD_LOGIC_VECTOR (1 downto 0);
    SIGNAL m_axi_card_hbm_p7_arlock_01  : STD_LOGIC_VECTOR (0 downto 0);
    SIGNAL m_axi_card_hbm_p7_awlock_01  : STD_LOGIC_VECTOR (0 downto 0);
#endif
--
#if defined(CONFIG_ENABLE_ETHERNET) && !defined(CONFIG_ENABLE_ETH_LOOP_BACK)
    SIGNAL eth1_rx_tdata                : STD_LOGIC_VECTOR(511 DOWNTO 0);
    SIGNAL eth1_rx_tkeep                : STD_LOGIC_VECTOR(63 DOWNTO 0);
    SIGNAL eth1_rx_tlast                : STD_LOGIC;
    SIGNAL eth1_rx_tvalid               : STD_LOGIC;
    SIGNAL eth1_rx_tready               : STD_LOGIC;
    SIGNAL eth1_rx_tuser                : STD_LOGIC_VECTOR(0 DOWNTO 0);

-- Enable for ethernet TX
    SIGNAL eth1_tx_tdata                : STD_LOGIC_VECTOR(511 DOWNTO 0);
    SIGNAL eth1_tx_tkeep                : STD_LOGIC_VECTOR(63 DOWNTO 0);
    SIGNAL eth1_tx_tlast                : STD_LOGIC;
    SIGNAL eth1_tx_tvalid               : STD_LOGIC;
    SIGNAL eth1_tx_tready               : STD_LOGIC;
    SIGNAL eth1_tx_tuser                : STD_LOGIC_VECTOR(0 DOWNTO 0);

    SIGNAL eth_rst                      : STD_LOGIC;
--    SIGNAL eth_rx_enable                : STD_LOGIC;
#endif
--
BEGIN
  --
  -- Reset Delay Logic
  --
  reset_reg : PROCESS (ha_pclock)
  BEGIN
    IF (rising_edge(ha_pclock)) THEN
      action_reset_n_q   <= NOT action_reset;
#if defined(CONFIG_ENABLE_ETHERNET) && !defined(CONFIG_ENABLE_ETH_LOOP_BACK)
      eth_rst            <= pci_user_reset;
#endif
      pci_user_reset_q   <= pci_user_reset;
      pci_user_reset_qq  <= pci_user_reset_q;      
    END IF;
  END PROCESS reset_reg;

  snap_core_i: snap_core
    PORT MAP (
      --
      -- PSL Interface
      --
      -- Command interface
      ah_cvalid      => ah_cvalid,
      ah_ctag        => ah_ctag,
      ah_com         => ah_com,
      ah_cabt        => ah_cabt,
      ah_cea         => ah_cea,
      ah_cch         => ah_cch,
      ah_csize       => ah_csize,
      ha_croom       => ha_croom,
      ah_ctagpar     => ah_ctagpar,
      ah_compar      => ah_compar,
      ah_ceapar      => ah_ceapar,
      --
      -- Buffer interface
      ha_brvalid     => ha_brvalid,
      ha_brtag       => ha_brtag,
      ha_brad        => ha_brad,
      ah_brlat       => ah_brlat,
      ah_brdata      => ah_brdata,
      ah_brpar       => ah_brpar,
      ha_bwvalid     => ha_bwvalid,
      ha_bwtag       => ha_bwtag,
      ha_bwad        => ha_bwad,
      ha_bwdata      => ha_bwdata,
      ha_bwpar       => ha_bwpar,
      ha_brtagpar    => ha_brtagpar,
      ha_bwtagpar    => ha_bwtagpar,
      --
      --  Response interface
      ha_rvalid      => ha_rvalid,
      ha_rtag        => ha_rtag,
      ha_rditag      => ha_rditag,
      ha_response    => ha_response,
      ha_response_ext=> ha_response_ext,
      ha_rpagesize   => ha_rpagesize,
      ha_rcredits    => ha_rcredits,
      ha_rcachestate => ha_rcachestate,
      ha_rcachepos   => ha_rcachepos,
      ha_rtagpar     => ha_rtagpar,
      ha_rditagpar   => ha_rditagpar,
      --
      -- MMIO interface
      ha_mmval       => ha_mmval,
      ha_mmrnw       => ha_mmrnw,
      ha_mmdw        => ha_mmdw,
      ha_mmad        => ha_mmad,
      ha_mmdata      => ha_mmdata,
      ha_mmcfg       => ha_mmcfg,
      ah_mmack       => ah_mmack,
      ah_mmdata      => ah_mmdata,
      ha_mmadpar     => ha_mmadpar,
      ha_mmdatapar   => ha_mmdatapar,
      ah_mmdatapar   => ah_mmdatapar,
      --
      -- Control interface
      ha_jval        => ha_jval,
      ha_jcom        => ha_jcom,
      ha_jea         => ha_jea,
      ah_jrunning    => ah_jrunning,
      ah_jdone       => ah_jdone,
      ah_jcack       => ah_jcack,
      ah_jerror      => ah_jerror,
      ah_tbreq       => ah_tbreq,
      ah_jyield      => ah_jyield,
      ha_jeapar      => ha_jeapar,
      ha_jcompar     => ha_jcompar,
      ah_paren       => ah_paren,
      ha_pclock      => ha_pclock,
      -- DMA interface
      d0h_dvalid          => d0h_dvalid,
      d0h_req_utag        => d0h_req_utag,
      d0h_req_itag        => d0h_req_itag,
      d0h_dtype           => d0h_dtype,
      d0h_datomic_op      => d0h_datomic_op,
      d0h_datomic_le      => d0h_datomic_le,
      d0h_dsize           => d0h_dsize,
      d0h_ddata           => d0h_ddata,
      hd0_sent_utag_valid => hd0_sent_utag_valid,
      hd0_sent_utag       => hd0_sent_utag,
      hd0_sent_utag_sts   => hd0_sent_utag_sts,
      hd0_cpl_valid       => hd0_cpl_valid,
      hd0_cpl_utag        => hd0_cpl_utag,
      hd0_cpl_type        => hd0_cpl_type,
      hd0_cpl_size        => hd0_cpl_size,
      hd0_cpl_laddr       => hd0_cpl_laddr,
      hd0_cpl_byte_count  => hd0_cpl_byte_count,
      hd0_cpl_data        => hd0_cpl_data,
      --
      -- ACTION Interface
      --
      -- misc
      action_reset   => action_reset,
      --
      -- Kernel AXI Master Interface
      xk_d_o         => xk_d,
      kx_d_i         => kx_d,
      --
      -- Kernel AXI Slave Interface
      sk_d_o         => sk_d,
      ks_d_i         => ks_d
    );

  --
  -- ACTION
  --
  action_w: action_wrapper
    PORT MAP (
      ap_clk                               => ha_pclock,
      ap_rst_n                             => action_reset_n_q,
      interrupt_ack                        => sk_d.int_req_ack,
      interrupt                            => ks_d.int_req,
      interrupt_src                        => ks_d.int_src,
      interrupt_ctx                        => ks_d.int_ctx,
#ifdef CONFIG_ENABLE_HBM
--CHANGE_HBM_INTERFACES_NUMBER
-- copy/paste these 45 signals for a new AXI interface
      m_axi_card_hbm_p0_araddr   => m_axi_card_hbm_p0_araddr,
      m_axi_card_hbm_p0_arburst  => m_axi_card_hbm_p0_arburst,
      m_axi_card_hbm_p0_arcache  => m_axi_card_hbm_p0_arcache,
      m_axi_card_hbm_p0_arid     => m_axi_card_hbm_p0_arid,
      m_axi_card_hbm_p0_arlen    => m_axi_card_hbm_p0_arlen,
      m_axi_card_hbm_p0_arlock   => m_axi_card_hbm_p0_arlock,
      m_axi_card_hbm_p0_arprot   => m_axi_card_hbm_p0_arprot,
      m_axi_card_hbm_p0_arqos    => m_axi_card_hbm_p0_arqos,
      m_axi_card_hbm_p0_arready  => m_axi_card_hbm_p0_arready,
      m_axi_card_hbm_p0_arregion => m_axi_card_hbm_p0_arregion,
      m_axi_card_hbm_p0_arsize   => m_axi_card_hbm_p0_arsize,
      m_axi_card_hbm_p0_aruser   => m_axi_card_hbm_p0_aruser,
      m_axi_card_hbm_p0_arvalid  => m_axi_card_hbm_p0_arvalid,
      m_axi_card_hbm_p0_awaddr   => m_axi_card_hbm_p0_awaddr,
      m_axi_card_hbm_p0_awburst  => m_axi_card_hbm_p0_awburst,
      m_axi_card_hbm_p0_awcache  => m_axi_card_hbm_p0_awcache,
      m_axi_card_hbm_p0_awid     => m_axi_card_hbm_p0_awid,
      m_axi_card_hbm_p0_awlen    => m_axi_card_hbm_p0_awlen,
      m_axi_card_hbm_p0_awlock   => m_axi_card_hbm_p0_awlock,
      m_axi_card_hbm_p0_awprot   => m_axi_card_hbm_p0_awprot,
      m_axi_card_hbm_p0_awqos    => m_axi_card_hbm_p0_awqos,
      m_axi_card_hbm_p0_awready  => m_axi_card_hbm_p0_awready,
      m_axi_card_hbm_p0_awregion => m_axi_card_hbm_p0_awregion,
      m_axi_card_hbm_p0_awsize   => m_axi_card_hbm_p0_awsize,
      m_axi_card_hbm_p0_awuser   => m_axi_card_hbm_p0_awuser,
      m_axi_card_hbm_p0_awvalid  => m_axi_card_hbm_p0_awvalid,
      m_axi_card_hbm_p0_bid      => (OTHERS => '0'),
      m_axi_card_hbm_p0_bready   => m_axi_card_hbm_p0_bready,
      m_axi_card_hbm_p0_bresp    => m_axi_card_hbm_p0_bresp,
      m_axi_card_hbm_p0_buser    => (OTHERS => '0'),
      m_axi_card_hbm_p0_bvalid   => m_axi_card_hbm_p0_bvalid,
      m_axi_card_hbm_p0_rdata    => m_axi_card_hbm_p0_rdata,
      m_axi_card_hbm_p0_rid      => (OTHERS => '0'),
      m_axi_card_hbm_p0_rlast    => m_axi_card_hbm_p0_rlast,
      m_axi_card_hbm_p0_rready   => m_axi_card_hbm_p0_rready,
      m_axi_card_hbm_p0_rresp    => m_axi_card_hbm_p0_rresp,
      m_axi_card_hbm_p0_ruser    => (OTHERS => '0'),
      m_axi_card_hbm_p0_rvalid   => m_axi_card_hbm_p0_rvalid,
      m_axi_card_hbm_p0_wdata    => m_axi_card_hbm_p0_wdata,
      m_axi_card_hbm_p0_wid      => open,
      m_axi_card_hbm_p0_wlast    => m_axi_card_hbm_p0_wlast,
      m_axi_card_hbm_p0_wready   => m_axi_card_hbm_p0_wready,
      m_axi_card_hbm_p0_wstrb    => m_axi_card_hbm_p0_wstrb,
      m_axi_card_hbm_p0_wuser    => m_axi_card_hbm_p0_wuser,
      m_axi_card_hbm_p0_wvalid   => m_axi_card_hbm_p0_wvalid,
  --
      m_axi_card_hbm_p1_araddr   => m_axi_card_hbm_p1_araddr,
      m_axi_card_hbm_p1_arburst  => m_axi_card_hbm_p1_arburst,
      m_axi_card_hbm_p1_arcache  => m_axi_card_hbm_p1_arcache,
      m_axi_card_hbm_p1_arid     => m_axi_card_hbm_p1_arid,
      m_axi_card_hbm_p1_arlen    => m_axi_card_hbm_p1_arlen,
      m_axi_card_hbm_p1_arlock   => m_axi_card_hbm_p1_arlock,
      m_axi_card_hbm_p1_arprot   => m_axi_card_hbm_p1_arprot,
      m_axi_card_hbm_p1_arqos    => m_axi_card_hbm_p1_arqos,
      m_axi_card_hbm_p1_arready  => m_axi_card_hbm_p1_arready,
      m_axi_card_hbm_p1_arregion => m_axi_card_hbm_p1_arregion,
      m_axi_card_hbm_p1_arsize   => m_axi_card_hbm_p1_arsize,
      m_axi_card_hbm_p1_aruser   => m_axi_card_hbm_p1_aruser,
      m_axi_card_hbm_p1_arvalid  => m_axi_card_hbm_p1_arvalid,
      m_axi_card_hbm_p1_awaddr   => m_axi_card_hbm_p1_awaddr,
      m_axi_card_hbm_p1_awburst  => m_axi_card_hbm_p1_awburst,
      m_axi_card_hbm_p1_awcache  => m_axi_card_hbm_p1_awcache,
      m_axi_card_hbm_p1_awid     => m_axi_card_hbm_p1_awid,
      m_axi_card_hbm_p1_awlen    => m_axi_card_hbm_p1_awlen,
      m_axi_card_hbm_p1_awlock   => m_axi_card_hbm_p1_awlock,
      m_axi_card_hbm_p1_awprot   => m_axi_card_hbm_p1_awprot,
      m_axi_card_hbm_p1_awqos    => m_axi_card_hbm_p1_awqos,
      m_axi_card_hbm_p1_awready  => m_axi_card_hbm_p1_awready,
      m_axi_card_hbm_p1_awregion => m_axi_card_hbm_p1_awregion,
      m_axi_card_hbm_p1_awsize   => m_axi_card_hbm_p1_awsize,
      m_axi_card_hbm_p1_awuser   => m_axi_card_hbm_p1_awuser,
      m_axi_card_hbm_p1_awvalid  => m_axi_card_hbm_p1_awvalid,
      m_axi_card_hbm_p1_bid      => (OTHERS => '0'),
      m_axi_card_hbm_p1_bready   => m_axi_card_hbm_p1_bready,
      m_axi_card_hbm_p1_bresp    => m_axi_card_hbm_p1_bresp,
      m_axi_card_hbm_p1_buser    => (OTHERS => '0'),
      m_axi_card_hbm_p1_bvalid   => m_axi_card_hbm_p1_bvalid,
      m_axi_card_hbm_p1_rdata    => m_axi_card_hbm_p1_rdata,
      m_axi_card_hbm_p1_rid      => (OTHERS => '0'),
      m_axi_card_hbm_p1_rlast    => m_axi_card_hbm_p1_rlast,
      m_axi_card_hbm_p1_rready   => m_axi_card_hbm_p1_rready,
      m_axi_card_hbm_p1_rresp    => m_axi_card_hbm_p1_rresp,
      m_axi_card_hbm_p1_ruser    => (OTHERS => '0'),
      m_axi_card_hbm_p1_rvalid   => m_axi_card_hbm_p1_rvalid,
      m_axi_card_hbm_p1_wdata    => m_axi_card_hbm_p1_wdata,
      m_axi_card_hbm_p1_wid      => open,
      m_axi_card_hbm_p1_wlast    => m_axi_card_hbm_p1_wlast,
      m_axi_card_hbm_p1_wready   => m_axi_card_hbm_p1_wready,
      m_axi_card_hbm_p1_wstrb    => m_axi_card_hbm_p1_wstrb,
      m_axi_card_hbm_p1_wuser    => m_axi_card_hbm_p1_wuser,
      m_axi_card_hbm_p1_wvalid   => m_axi_card_hbm_p1_wvalid,
--
      m_axi_card_hbm_p2_araddr   => m_axi_card_hbm_p2_araddr,
      m_axi_card_hbm_p2_arburst  => m_axi_card_hbm_p2_arburst,
      m_axi_card_hbm_p2_arcache  => m_axi_card_hbm_p2_arcache,
      m_axi_card_hbm_p2_arid     => m_axi_card_hbm_p2_arid,
      m_axi_card_hbm_p2_arlen    => m_axi_card_hbm_p2_arlen,
      m_axi_card_hbm_p2_arlock   => m_axi_card_hbm_p2_arlock,
      m_axi_card_hbm_p2_arprot   => m_axi_card_hbm_p2_arprot,
      m_axi_card_hbm_p2_arqos    => m_axi_card_hbm_p2_arqos,
      m_axi_card_hbm_p2_arready  => m_axi_card_hbm_p2_arready,
      m_axi_card_hbm_p2_arregion => m_axi_card_hbm_p2_arregion,
      m_axi_card_hbm_p2_arsize   => m_axi_card_hbm_p2_arsize,
      m_axi_card_hbm_p2_aruser   => m_axi_card_hbm_p2_aruser,
      m_axi_card_hbm_p2_arvalid  => m_axi_card_hbm_p2_arvalid,
      m_axi_card_hbm_p2_awaddr   => m_axi_card_hbm_p2_awaddr,
      m_axi_card_hbm_p2_awburst  => m_axi_card_hbm_p2_awburst,
      m_axi_card_hbm_p2_awcache  => m_axi_card_hbm_p2_awcache,
      m_axi_card_hbm_p2_awid     => m_axi_card_hbm_p2_awid,
      m_axi_card_hbm_p2_awlen    => m_axi_card_hbm_p2_awlen,
      m_axi_card_hbm_p2_awlock   => m_axi_card_hbm_p2_awlock,
      m_axi_card_hbm_p2_awprot   => m_axi_card_hbm_p2_awprot,
      m_axi_card_hbm_p2_awqos    => m_axi_card_hbm_p2_awqos,
      m_axi_card_hbm_p2_awready  => m_axi_card_hbm_p2_awready,
      m_axi_card_hbm_p2_awregion => m_axi_card_hbm_p2_awregion,
      m_axi_card_hbm_p2_awsize   => m_axi_card_hbm_p2_awsize,
      m_axi_card_hbm_p2_awuser   => m_axi_card_hbm_p2_awuser,
      m_axi_card_hbm_p2_awvalid  => m_axi_card_hbm_p2_awvalid,
      m_axi_card_hbm_p2_bid      => (OTHERS => '0'),
      m_axi_card_hbm_p2_bready   => m_axi_card_hbm_p2_bready,
      m_axi_card_hbm_p2_bresp    => m_axi_card_hbm_p2_bresp,
      m_axi_card_hbm_p2_buser    => (OTHERS => '0'),
      m_axi_card_hbm_p2_bvalid   => m_axi_card_hbm_p2_bvalid,
      m_axi_card_hbm_p2_rdata    => m_axi_card_hbm_p2_rdata,
      m_axi_card_hbm_p2_rid      => (OTHERS => '0'),
      m_axi_card_hbm_p2_rlast    => m_axi_card_hbm_p2_rlast,
      m_axi_card_hbm_p2_rready   => m_axi_card_hbm_p2_rready,
      m_axi_card_hbm_p2_rresp    => m_axi_card_hbm_p2_rresp,
      m_axi_card_hbm_p2_ruser    => (OTHERS => '0'),
      m_axi_card_hbm_p2_rvalid   => m_axi_card_hbm_p2_rvalid,
      m_axi_card_hbm_p2_wdata    => m_axi_card_hbm_p2_wdata,
      m_axi_card_hbm_p2_wid      => open,
      m_axi_card_hbm_p2_wlast    => m_axi_card_hbm_p2_wlast,
      m_axi_card_hbm_p2_wready   => m_axi_card_hbm_p2_wready,
      m_axi_card_hbm_p2_wstrb    => m_axi_card_hbm_p2_wstrb,
      m_axi_card_hbm_p2_wuser    => m_axi_card_hbm_p2_wuser,
      m_axi_card_hbm_p2_wvalid   => m_axi_card_hbm_p2_wvalid,
  --
      m_axi_card_hbm_p3_araddr   => m_axi_card_hbm_p3_araddr,
      m_axi_card_hbm_p3_arburst  => m_axi_card_hbm_p3_arburst,
      m_axi_card_hbm_p3_arcache  => m_axi_card_hbm_p3_arcache,
      m_axi_card_hbm_p3_arid     => m_axi_card_hbm_p3_arid,
      m_axi_card_hbm_p3_arlen    => m_axi_card_hbm_p3_arlen,
      m_axi_card_hbm_p3_arlock   => m_axi_card_hbm_p3_arlock,
      m_axi_card_hbm_p3_arprot   => m_axi_card_hbm_p3_arprot,
      m_axi_card_hbm_p3_arqos    => m_axi_card_hbm_p3_arqos,
      m_axi_card_hbm_p3_arready  => m_axi_card_hbm_p3_arready,
      m_axi_card_hbm_p3_arregion => m_axi_card_hbm_p3_arregion,
      m_axi_card_hbm_p3_arsize   => m_axi_card_hbm_p3_arsize,
      m_axi_card_hbm_p3_aruser   => m_axi_card_hbm_p3_aruser,
      m_axi_card_hbm_p3_arvalid  => m_axi_card_hbm_p3_arvalid,
      m_axi_card_hbm_p3_awaddr   => m_axi_card_hbm_p3_awaddr,
      m_axi_card_hbm_p3_awburst  => m_axi_card_hbm_p3_awburst,
      m_axi_card_hbm_p3_awcache  => m_axi_card_hbm_p3_awcache,
      m_axi_card_hbm_p3_awid     => m_axi_card_hbm_p3_awid,
      m_axi_card_hbm_p3_awlen    => m_axi_card_hbm_p3_awlen,
      m_axi_card_hbm_p3_awlock   => m_axi_card_hbm_p3_awlock,
      m_axi_card_hbm_p3_awprot   => m_axi_card_hbm_p3_awprot,
      m_axi_card_hbm_p3_awqos    => m_axi_card_hbm_p3_awqos,
      m_axi_card_hbm_p3_awready  => m_axi_card_hbm_p3_awready,
      m_axi_card_hbm_p3_awregion => m_axi_card_hbm_p3_awregion,
      m_axi_card_hbm_p3_awsize   => m_axi_card_hbm_p3_awsize,
      m_axi_card_hbm_p3_awuser   => m_axi_card_hbm_p3_awuser,
      m_axi_card_hbm_p3_awvalid  => m_axi_card_hbm_p3_awvalid,
      m_axi_card_hbm_p3_bid      => (OTHERS => '0'),
      m_axi_card_hbm_p3_bready   => m_axi_card_hbm_p3_bready,
      m_axi_card_hbm_p3_bresp    => m_axi_card_hbm_p3_bresp,
      m_axi_card_hbm_p3_buser    => (OTHERS => '0'),
      m_axi_card_hbm_p3_bvalid   => m_axi_card_hbm_p3_bvalid,
      m_axi_card_hbm_p3_rdata    => m_axi_card_hbm_p3_rdata,
      m_axi_card_hbm_p3_rid      => (OTHERS => '0'),
      m_axi_card_hbm_p3_rlast    => m_axi_card_hbm_p3_rlast,
      m_axi_card_hbm_p3_rready   => m_axi_card_hbm_p3_rready,
      m_axi_card_hbm_p3_rresp    => m_axi_card_hbm_p3_rresp,
      m_axi_card_hbm_p3_ruser    => (OTHERS => '0'),
      m_axi_card_hbm_p3_rvalid   => m_axi_card_hbm_p3_rvalid,
      m_axi_card_hbm_p3_wdata    => m_axi_card_hbm_p3_wdata,
      m_axi_card_hbm_p3_wid      => open,
      m_axi_card_hbm_p3_wlast    => m_axi_card_hbm_p3_wlast,
      m_axi_card_hbm_p3_wready   => m_axi_card_hbm_p3_wready,
      m_axi_card_hbm_p3_wstrb    => m_axi_card_hbm_p3_wstrb,
      m_axi_card_hbm_p3_wuser    => m_axi_card_hbm_p3_wuser,
      m_axi_card_hbm_p3_wvalid   => m_axi_card_hbm_p3_wvalid,
-- 
      m_axi_card_hbm_p4_araddr   => m_axi_card_hbm_p4_araddr,
      m_axi_card_hbm_p4_arburst  => m_axi_card_hbm_p4_arburst,
      m_axi_card_hbm_p4_arcache  => m_axi_card_hbm_p4_arcache,
      m_axi_card_hbm_p4_arid     => m_axi_card_hbm_p4_arid,
      m_axi_card_hbm_p4_arlen    => m_axi_card_hbm_p4_arlen,
      m_axi_card_hbm_p4_arlock   => m_axi_card_hbm_p4_arlock,
      m_axi_card_hbm_p4_arprot   => m_axi_card_hbm_p4_arprot,
      m_axi_card_hbm_p4_arqos    => m_axi_card_hbm_p4_arqos,
      m_axi_card_hbm_p4_arready  => m_axi_card_hbm_p4_arready,
      m_axi_card_hbm_p4_arregion => m_axi_card_hbm_p4_arregion,
      m_axi_card_hbm_p4_arsize   => m_axi_card_hbm_p4_arsize,
      m_axi_card_hbm_p4_aruser   => m_axi_card_hbm_p4_aruser,
      m_axi_card_hbm_p4_arvalid  => m_axi_card_hbm_p4_arvalid,
      m_axi_card_hbm_p4_awaddr   => m_axi_card_hbm_p4_awaddr,
      m_axi_card_hbm_p4_awburst  => m_axi_card_hbm_p4_awburst,
      m_axi_card_hbm_p4_awcache  => m_axi_card_hbm_p4_awcache,
      m_axi_card_hbm_p4_awid     => m_axi_card_hbm_p4_awid,
      m_axi_card_hbm_p4_awlen    => m_axi_card_hbm_p4_awlen,
      m_axi_card_hbm_p4_awlock   => m_axi_card_hbm_p4_awlock,
      m_axi_card_hbm_p4_awprot   => m_axi_card_hbm_p4_awprot,
      m_axi_card_hbm_p4_awqos    => m_axi_card_hbm_p4_awqos,
      m_axi_card_hbm_p4_awready  => m_axi_card_hbm_p4_awready,
      m_axi_card_hbm_p4_awregion => m_axi_card_hbm_p4_awregion,
      m_axi_card_hbm_p4_awsize   => m_axi_card_hbm_p4_awsize,
      m_axi_card_hbm_p4_awuser   => m_axi_card_hbm_p4_awuser,
      m_axi_card_hbm_p4_awvalid  => m_axi_card_hbm_p4_awvalid,
      m_axi_card_hbm_p4_bid      => (OTHERS => '0'),
      m_axi_card_hbm_p4_bready   => m_axi_card_hbm_p4_bready,
      m_axi_card_hbm_p4_bresp    => m_axi_card_hbm_p4_bresp,
      m_axi_card_hbm_p4_buser    => (OTHERS => '0'),
      m_axi_card_hbm_p4_bvalid   => m_axi_card_hbm_p4_bvalid,
      m_axi_card_hbm_p4_rdata    => m_axi_card_hbm_p4_rdata,
      m_axi_card_hbm_p4_rid      => (OTHERS => '0'),
      m_axi_card_hbm_p4_rlast    => m_axi_card_hbm_p4_rlast,
      m_axi_card_hbm_p4_rready   => m_axi_card_hbm_p4_rready,
      m_axi_card_hbm_p4_rresp    => m_axi_card_hbm_p4_rresp,
      m_axi_card_hbm_p4_ruser    => (OTHERS => '0'),
      m_axi_card_hbm_p4_rvalid   => m_axi_card_hbm_p4_rvalid,
      m_axi_card_hbm_p4_wdata    => m_axi_card_hbm_p4_wdata,
      m_axi_card_hbm_p4_wid      => open,
      m_axi_card_hbm_p4_wlast    => m_axi_card_hbm_p4_wlast,
      m_axi_card_hbm_p4_wready   => m_axi_card_hbm_p4_wready,
      m_axi_card_hbm_p4_wstrb    => m_axi_card_hbm_p4_wstrb,
      m_axi_card_hbm_p4_wuser    => m_axi_card_hbm_p4_wuser,
      m_axi_card_hbm_p4_wvalid   => m_axi_card_hbm_p4_wvalid,
  --
      m_axi_card_hbm_p5_araddr   => m_axi_card_hbm_p5_araddr,
      m_axi_card_hbm_p5_arburst  => m_axi_card_hbm_p5_arburst,
      m_axi_card_hbm_p5_arcache  => m_axi_card_hbm_p5_arcache,
      m_axi_card_hbm_p5_arid     => m_axi_card_hbm_p5_arid,
      m_axi_card_hbm_p5_arlen    => m_axi_card_hbm_p5_arlen,
      m_axi_card_hbm_p5_arlock   => m_axi_card_hbm_p5_arlock,
      m_axi_card_hbm_p5_arprot   => m_axi_card_hbm_p5_arprot,
      m_axi_card_hbm_p5_arqos    => m_axi_card_hbm_p5_arqos,
      m_axi_card_hbm_p5_arready  => m_axi_card_hbm_p5_arready,
      m_axi_card_hbm_p5_arregion => m_axi_card_hbm_p5_arregion,
      m_axi_card_hbm_p5_arsize   => m_axi_card_hbm_p5_arsize,
      m_axi_card_hbm_p5_aruser   => m_axi_card_hbm_p5_aruser,
      m_axi_card_hbm_p5_arvalid  => m_axi_card_hbm_p5_arvalid,
      m_axi_card_hbm_p5_awaddr   => m_axi_card_hbm_p5_awaddr,
      m_axi_card_hbm_p5_awburst  => m_axi_card_hbm_p5_awburst,
      m_axi_card_hbm_p5_awcache  => m_axi_card_hbm_p5_awcache,
      m_axi_card_hbm_p5_awid     => m_axi_card_hbm_p5_awid,
      m_axi_card_hbm_p5_awlen    => m_axi_card_hbm_p5_awlen,
      m_axi_card_hbm_p5_awlock   => m_axi_card_hbm_p5_awlock,
      m_axi_card_hbm_p5_awprot   => m_axi_card_hbm_p5_awprot,
      m_axi_card_hbm_p5_awqos    => m_axi_card_hbm_p5_awqos,
      m_axi_card_hbm_p5_awready  => m_axi_card_hbm_p5_awready,
      m_axi_card_hbm_p5_awregion => m_axi_card_hbm_p5_awregion,
      m_axi_card_hbm_p5_awsize   => m_axi_card_hbm_p5_awsize,
      m_axi_card_hbm_p5_awuser   => m_axi_card_hbm_p5_awuser,
      m_axi_card_hbm_p5_awvalid  => m_axi_card_hbm_p5_awvalid,
      m_axi_card_hbm_p5_bid      => (OTHERS => '0'),
      m_axi_card_hbm_p5_bready   => m_axi_card_hbm_p5_bready,
      m_axi_card_hbm_p5_bresp    => m_axi_card_hbm_p5_bresp,
      m_axi_card_hbm_p5_buser    => (OTHERS => '0'),
      m_axi_card_hbm_p5_bvalid   => m_axi_card_hbm_p5_bvalid,
      m_axi_card_hbm_p5_rdata    => m_axi_card_hbm_p5_rdata,
      m_axi_card_hbm_p5_rid      => (OTHERS => '0'),
      m_axi_card_hbm_p5_rlast    => m_axi_card_hbm_p5_rlast,
      m_axi_card_hbm_p5_rready   => m_axi_card_hbm_p5_rready,
      m_axi_card_hbm_p5_rresp    => m_axi_card_hbm_p5_rresp,
      m_axi_card_hbm_p5_ruser    => (OTHERS => '0'),
      m_axi_card_hbm_p5_rvalid   => m_axi_card_hbm_p5_rvalid,
      m_axi_card_hbm_p5_wdata    => m_axi_card_hbm_p5_wdata,
      m_axi_card_hbm_p5_wid      => open,
      m_axi_card_hbm_p5_wlast    => m_axi_card_hbm_p5_wlast,
      m_axi_card_hbm_p5_wready   => m_axi_card_hbm_p5_wready,
      m_axi_card_hbm_p5_wstrb    => m_axi_card_hbm_p5_wstrb,
      m_axi_card_hbm_p5_wuser    => m_axi_card_hbm_p5_wuser,
      m_axi_card_hbm_p5_wvalid   => m_axi_card_hbm_p5_wvalid,
--
      m_axi_card_hbm_p6_araddr   => m_axi_card_hbm_p6_araddr,
      m_axi_card_hbm_p6_arburst  => m_axi_card_hbm_p6_arburst,
      m_axi_card_hbm_p6_arcache  => m_axi_card_hbm_p6_arcache,
      m_axi_card_hbm_p6_arid     => m_axi_card_hbm_p6_arid,
      m_axi_card_hbm_p6_arlen    => m_axi_card_hbm_p6_arlen,
      m_axi_card_hbm_p6_arlock   => m_axi_card_hbm_p6_arlock,
      m_axi_card_hbm_p6_arprot   => m_axi_card_hbm_p6_arprot,
      m_axi_card_hbm_p6_arqos    => m_axi_card_hbm_p6_arqos,
      m_axi_card_hbm_p6_arready  => m_axi_card_hbm_p6_arready,
      m_axi_card_hbm_p6_arregion => m_axi_card_hbm_p6_arregion,
      m_axi_card_hbm_p6_arsize   => m_axi_card_hbm_p6_arsize,
      m_axi_card_hbm_p6_aruser   => m_axi_card_hbm_p6_aruser,
      m_axi_card_hbm_p6_arvalid  => m_axi_card_hbm_p6_arvalid,
      m_axi_card_hbm_p6_awaddr   => m_axi_card_hbm_p6_awaddr,
      m_axi_card_hbm_p6_awburst  => m_axi_card_hbm_p6_awburst,
      m_axi_card_hbm_p6_awcache  => m_axi_card_hbm_p6_awcache,
      m_axi_card_hbm_p6_awid     => m_axi_card_hbm_p6_awid,
      m_axi_card_hbm_p6_awlen    => m_axi_card_hbm_p6_awlen,
      m_axi_card_hbm_p6_awlock   => m_axi_card_hbm_p6_awlock,
      m_axi_card_hbm_p6_awprot   => m_axi_card_hbm_p6_awprot,
      m_axi_card_hbm_p6_awqos    => m_axi_card_hbm_p6_awqos,
      m_axi_card_hbm_p6_awready  => m_axi_card_hbm_p6_awready,
      m_axi_card_hbm_p6_awregion => m_axi_card_hbm_p6_awregion,
      m_axi_card_hbm_p6_awsize   => m_axi_card_hbm_p6_awsize,
      m_axi_card_hbm_p6_awuser   => m_axi_card_hbm_p6_awuser,
      m_axi_card_hbm_p6_awvalid  => m_axi_card_hbm_p6_awvalid,
      m_axi_card_hbm_p6_bid      => (OTHERS => '0'),
      m_axi_card_hbm_p6_bready   => m_axi_card_hbm_p6_bready,
      m_axi_card_hbm_p6_bresp    => m_axi_card_hbm_p6_bresp,
      m_axi_card_hbm_p6_buser    => (OTHERS => '0'),
      m_axi_card_hbm_p6_bvalid   => m_axi_card_hbm_p6_bvalid,
      m_axi_card_hbm_p6_rdata    => m_axi_card_hbm_p6_rdata,
      m_axi_card_hbm_p6_rid      => (OTHERS => '0'),
      m_axi_card_hbm_p6_rlast    => m_axi_card_hbm_p6_rlast,
      m_axi_card_hbm_p6_rready   => m_axi_card_hbm_p6_rready,
      m_axi_card_hbm_p6_rresp    => m_axi_card_hbm_p6_rresp,
      m_axi_card_hbm_p6_ruser    => (OTHERS => '0'),
      m_axi_card_hbm_p6_rvalid   => m_axi_card_hbm_p6_rvalid,
      m_axi_card_hbm_p6_wdata    => m_axi_card_hbm_p6_wdata,
      m_axi_card_hbm_p6_wid      => open,
      m_axi_card_hbm_p6_wlast    => m_axi_card_hbm_p6_wlast,
      m_axi_card_hbm_p6_wready   => m_axi_card_hbm_p6_wready,
      m_axi_card_hbm_p6_wstrb    => m_axi_card_hbm_p6_wstrb,
      m_axi_card_hbm_p6_wuser    => m_axi_card_hbm_p6_wuser,
      m_axi_card_hbm_p6_wvalid   => m_axi_card_hbm_p6_wvalid,
  --
      m_axi_card_hbm_p7_araddr   => m_axi_card_hbm_p7_araddr,
      m_axi_card_hbm_p7_arburst  => m_axi_card_hbm_p7_arburst,
      m_axi_card_hbm_p7_arcache  => m_axi_card_hbm_p7_arcache,
      m_axi_card_hbm_p7_arid     => m_axi_card_hbm_p7_arid,
      m_axi_card_hbm_p7_arlen    => m_axi_card_hbm_p7_arlen,
      m_axi_card_hbm_p7_arlock   => m_axi_card_hbm_p7_arlock,
      m_axi_card_hbm_p7_arprot   => m_axi_card_hbm_p7_arprot,
      m_axi_card_hbm_p7_arqos    => m_axi_card_hbm_p7_arqos,
      m_axi_card_hbm_p7_arready  => m_axi_card_hbm_p7_arready,
      m_axi_card_hbm_p7_arregion => m_axi_card_hbm_p7_arregion,
      m_axi_card_hbm_p7_arsize   => m_axi_card_hbm_p7_arsize,
      m_axi_card_hbm_p7_aruser   => m_axi_card_hbm_p7_aruser,
      m_axi_card_hbm_p7_arvalid  => m_axi_card_hbm_p7_arvalid,
      m_axi_card_hbm_p7_awaddr   => m_axi_card_hbm_p7_awaddr,
      m_axi_card_hbm_p7_awburst  => m_axi_card_hbm_p7_awburst,
      m_axi_card_hbm_p7_awcache  => m_axi_card_hbm_p7_awcache,
      m_axi_card_hbm_p7_awid     => m_axi_card_hbm_p7_awid,
      m_axi_card_hbm_p7_awlen    => m_axi_card_hbm_p7_awlen,
      m_axi_card_hbm_p7_awlock   => m_axi_card_hbm_p7_awlock,
      m_axi_card_hbm_p7_awprot   => m_axi_card_hbm_p7_awprot,
      m_axi_card_hbm_p7_awqos    => m_axi_card_hbm_p7_awqos,
      m_axi_card_hbm_p7_awready  => m_axi_card_hbm_p7_awready,
      m_axi_card_hbm_p7_awregion => m_axi_card_hbm_p7_awregion,
      m_axi_card_hbm_p7_awsize   => m_axi_card_hbm_p7_awsize,
      m_axi_card_hbm_p7_awuser   => m_axi_card_hbm_p7_awuser,
      m_axi_card_hbm_p7_awvalid  => m_axi_card_hbm_p7_awvalid,
      m_axi_card_hbm_p7_bid      => (OTHERS => '0'),
      m_axi_card_hbm_p7_bready   => m_axi_card_hbm_p7_bready,
      m_axi_card_hbm_p7_bresp    => m_axi_card_hbm_p7_bresp,
      m_axi_card_hbm_p7_buser    => (OTHERS => '0'),
      m_axi_card_hbm_p7_bvalid   => m_axi_card_hbm_p7_bvalid,
      m_axi_card_hbm_p7_rdata    => m_axi_card_hbm_p7_rdata,
      m_axi_card_hbm_p7_rid      => (OTHERS => '0'),
      m_axi_card_hbm_p7_rlast    => m_axi_card_hbm_p7_rlast,
      m_axi_card_hbm_p7_rready   => m_axi_card_hbm_p7_rready,
      m_axi_card_hbm_p7_rresp    => m_axi_card_hbm_p7_rresp,
      m_axi_card_hbm_p7_ruser    => (OTHERS => '0'),
      m_axi_card_hbm_p7_rvalid   => m_axi_card_hbm_p7_rvalid,
      m_axi_card_hbm_p7_wdata    => m_axi_card_hbm_p7_wdata,
      m_axi_card_hbm_p7_wid      => open,
      m_axi_card_hbm_p7_wlast    => m_axi_card_hbm_p7_wlast,
      m_axi_card_hbm_p7_wready   => m_axi_card_hbm_p7_wready,
      m_axi_card_hbm_p7_wstrb    => m_axi_card_hbm_p7_wstrb,
      m_axi_card_hbm_p7_wuser    => m_axi_card_hbm_p7_wuser,
      m_axi_card_hbm_p7_wvalid   => m_axi_card_hbm_p7_wvalid,
#endif
#if defined(CONFIG_ENABLE_ETHERNET) && !defined(CONFIG_ENABLE_ETH_LOOP_BACK)
    din_eth_TDATA                    => eth1_rx_tdata,
    din_eth_TVALID                   => eth1_rx_tvalid,
    din_eth_TREADY                   => eth1_rx_tready,
    din_eth_TKEEP                    => eth1_rx_tkeep,
    din_eth_TUSER                    => eth1_rx_tuser,
    din_eth_TLAST                    => eth1_rx_tlast,

-- Enable for ethernet TX
    dout_eth_TDATA                   => eth1_tx_tdata,
    dout_eth_TVALID                  => eth1_tx_tvalid,
    dout_eth_TREADY                  => eth1_tx_tready,
    dout_eth_TKEEP                   => eth1_tx_tkeep,
    dout_eth_TUSER                   => eth1_tx_tuser,
    dout_eth_TLAST                   => eth1_tx_tlast,
#endif
      --
      -- AXI Control Register Interface
      s_axi_ctrl_reg_araddr                => xk_d.m_axi_araddr,
      s_axi_ctrl_reg_arready               => kx_d.m_axi_arready,
      s_axi_ctrl_reg_arvalid               => xk_d.m_axi_arvalid,
      s_axi_ctrl_reg_awaddr                => xk_d.m_axi_awaddr,
      s_axi_ctrl_reg_awready               => kx_d.m_axi_awready,
      s_axi_ctrl_reg_awvalid               => xk_d.m_axi_awvalid,
      s_axi_ctrl_reg_bready                => xk_d.m_axi_bready,
      s_axi_ctrl_reg_bresp                 => kx_d.m_axi_bresp,
      s_axi_ctrl_reg_bvalid                => kx_d.m_axi_bvalid,
      s_axi_ctrl_reg_rdata                 => kx_d.m_axi_rdata,
      s_axi_ctrl_reg_rready                => xk_d.m_axi_rready,
      s_axi_ctrl_reg_rresp                 => kx_d.m_axi_rresp,
      s_axi_ctrl_reg_rvalid                => kx_d.m_axi_rvalid,
      s_axi_ctrl_reg_wdata                 => xk_d.m_axi_wdata,
      s_axi_ctrl_reg_wready                => kx_d.m_axi_wready,
      s_axi_ctrl_reg_wstrb                 => xk_d.m_axi_wstrb,
      s_axi_ctrl_reg_wvalid                => xk_d.m_axi_wvalid,
      --
      -- AXI Host Memory Interface
      m_axi_host_mem_araddr                => ks_d.s_axi_araddr(C_AXI_HOST_MEM_ADDR_WIDTH-1 DOWNTO 0),
      m_axi_host_mem_arburst               => ks_d.s_axi_arburst,
      m_axi_host_mem_arcache               => ks_d.s_axi_arcache,
      m_axi_host_mem_arid                  => ks_d.s_axi_arid(C_AXI_HOST_MEM_ID_WIDTH-1 DOWNTO 0),
      m_axi_host_mem_arlen                 => ks_d.s_axi_arlen,
      m_axi_host_mem_arlock                => OPEN,
      m_axi_host_mem_arprot                => ks_d.s_axi_arprot,
      m_axi_host_mem_arqos                 => ks_d.s_axi_arqos,
      m_axi_host_mem_arready               => sk_d.s_axi_arready,
      m_axi_host_mem_arregion              => OPEN,
      m_axi_host_mem_arsize                => ks_d.s_axi_arsize,
      m_axi_host_mem_aruser                => ks_d.s_axi_aruser(C_AXI_HOST_MEM_ARUSER_WIDTH-1 DOWNTO 0),
      m_axi_host_mem_arvalid               => ks_d.s_axi_arvalid,
      m_axi_host_mem_awaddr                => ks_d.s_axi_awaddr(C_AXI_HOST_MEM_ADDR_WIDTH-1 DOWNTO 0),
      m_axi_host_mem_awburst               => ks_d.s_axi_awburst,
      m_axi_host_mem_awcache               => ks_d.s_axi_awcache,
      m_axi_host_mem_awid                  => ks_d.s_axi_awid(C_AXI_HOST_MEM_ID_WIDTH-1 DOWNTO 0),
      m_axi_host_mem_awlen                 => ks_d.s_axi_awlen,
      m_axi_host_mem_awlock                => OPEN,
      m_axi_host_mem_awprot                => ks_d.s_axi_awprot,
      m_axi_host_mem_awqos                 => ks_d.s_axi_awqos,
      m_axi_host_mem_awready               => sk_d.s_axi_awready,
      m_axi_host_mem_awregion              => OPEN,
      m_axi_host_mem_awsize                => ks_d.s_axi_awsize,
      m_axi_host_mem_awuser                => ks_d.s_axi_awuser(C_AXI_HOST_MEM_AWUSER_WIDTH-1 DOWNTO 0),
      m_axi_host_mem_awvalid               => ks_d.s_axi_awvalid,
      m_axi_host_mem_bid                   => sk_d.s_axi_bid(C_AXI_HOST_MEM_ID_WIDTH-1 DOWNTO 0),
      m_axi_host_mem_bready                => ks_d.s_axi_bready,
      m_axi_host_mem_bresp                 => sk_d.s_axi_bresp,
      m_axi_host_mem_buser                 => (OTHERS => '0'),
      m_axi_host_mem_bvalid                => sk_d.s_axi_bvalid,
      m_axi_host_mem_rdata                 => sk_d.s_axi_rdata,
      m_axi_host_mem_rid                   => sk_d.s_axi_rid(C_AXI_HOST_MEM_ID_WIDTH-1 DOWNTO 0),
      m_axi_host_mem_rlast                 => sk_d.s_axi_rlast,
      m_axi_host_mem_rready                => ks_d.s_axi_rready,
      m_axi_host_mem_rresp                 => sk_d.s_axi_rresp,
      m_axi_host_mem_ruser                 => (OTHERS => '0'),
      m_axi_host_mem_rvalid                => sk_d.s_axi_rvalid,
      m_axi_host_mem_wdata                 => ks_d.s_axi_wdata(C_AXI_HOST_MEM_DATA_WIDTH-1 DOWNTO 0),
      m_axi_host_mem_wlast                 => ks_d.s_axi_wlast,
      m_axi_host_mem_wready                => sk_d.s_axi_wready,
      m_axi_host_mem_wstrb                 => ks_d.s_axi_wstrb((C_AXI_HOST_MEM_DATA_WIDTH/8)-1 DOWNTO 0),
      m_axi_host_mem_wuser                 => OPEN,
      m_axi_host_mem_wvalid                => ks_d.s_axi_wvalid
    );


#if defined(CONFIG_ENABLE_DDRI) && !defined(CONFIG_ENABLE_BRAM)
  sdram_axi_clk   <=     sdram_ui_clk;
  sdram_axi_rst_n <= NOT sdram_ui_clk_sync_rst;
#endif
#ifdef CONFIG_ENABLE_BRAM
  sdram_axi_clk   <=     pci_clock_125MHz;
  sdram_axi_rst_n <= NOT sdram_reset_q;
#endif


#ifdef CONFIG_ENABLE_BRAM
  sdram_axi_araddr_s(31 DOWNTO 0) <= '0' & sdram_axi_araddr(31 DOWNTO 1);
  sdram_axi_awaddr_s(31 DOWNTO 0) <= '0' & sdram_axi_awaddr(31 DOWNTO 1);

  block_ram_i0 : block_RAM
    PORT MAP (
      s_aresetn      => sdram_axi_rst_n,
      s_aclk         => sdram_axi_clk,
      s_axi_araddr   => sdram_axi_araddr_s(31 DOWNTO 0),
      s_axi_arburst  => sdram_axi_arburst(1 DOWNTO 0),
      s_axi_arid     => sdram_axi_arid,
      s_axi_arlen    => sdram_axi_arlen(7 DOWNTO 0),
      s_axi_arready  => sdram_axi_arready,
      s_axi_arsize   => "101",
      s_axi_arvalid  => sdram_axi_arvalid,
      s_axi_awaddr   => sdram_axi_awaddr_s(31 DOWNTO 0),
      s_axi_awburst  => sdram_axi_awburst(1 DOWNTO 0),
      s_axi_awid     => sdram_axi_awid,
      s_axi_awlen    => sdram_axi_awlen(7 DOWNTO 0),
      s_axi_awready  => sdram_axi_awready,
      s_axi_awsize   => "101",
      s_axi_awvalid  => sdram_axi_awvalid,
      s_axi_bid      => sdram_axi_bid,
      s_axi_bready   => sdram_axi_bready,
      s_axi_bresp    => sdram_axi_bresp(1 DOWNTO 0),
      s_axi_bvalid   => sdram_axi_bvalid,
      s_axi_rdata    => sdram_axi_rdata((C_AXI_CARD_MEM0_DATA_WIDTH/2-1) DOWNTO 0),
      s_axi_rid      => sdram_axi_rid(3 downto 0),
      s_axi_rlast    => sdram_axi_rlast,
      s_axi_rready   => sdram_axi_rready,
      s_axi_rresp    => sdram_axi_rresp(1 DOWNTO 0),
      s_axi_rvalid   => sdram_axi_rvalid,
      s_axi_wdata    => sdram_axi_wdata((C_AXI_CARD_MEM0_DATA_WIDTH/2)-1 DOWNTO 0),
      s_axi_wlast    => sdram_axi_wlast,
      s_axi_wready   => sdram_axi_wready,
      s_axi_wstrb    => sdram_axi_wstrb((C_AXI_CARD_MEM0_DATA_WIDTH/16)-1 DOWNTO 0),
      s_axi_wvalid   => sdram_axi_wvalid
    );

  block_ram_i1 : block_RAM
    PORT MAP (
      s_aresetn      => sdram_axi_rst_n,
      s_aclk         => sdram_axi_clk,
      s_axi_araddr   => sdram_axi_araddr_s(31 DOWNTO 0),
      s_axi_arburst  => sdram_axi_arburst(1 DOWNTO 0),
      s_axi_arid     => sdram_axi_arid,
      s_axi_arlen    => sdram_axi_arlen(7 DOWNTO 0),
      s_axi_arready  => open,
      s_axi_arsize   => "101",
      s_axi_arvalid  => sdram_axi_arvalid,
      s_axi_awaddr   => sdram_axi_awaddr_s(31 DOWNTO 0),
      s_axi_awburst  => sdram_axi_awburst(1 DOWNTO 0),
      s_axi_awid     => sdram_axi_awid,
      s_axi_awlen    => sdram_axi_awlen(7 DOWNTO 0),
      s_axi_awready  => open,
      s_axi_awsize   => "101",
      s_axi_awvalid  => sdram_axi_awvalid,
      s_axi_bid      => open,
      s_axi_bready   => sdram_axi_bready,
      s_axi_bresp    => open,
      s_axi_bvalid   => open,
      s_axi_rdata    => sdram_axi_rdata(C_AXI_CARD_MEM0_DATA_WIDTH-1 DOWNTO (C_AXI_CARD_MEM0_DATA_WIDTH/2)),
      s_axi_rid      => open,
      s_axi_rlast    => open,
      s_axi_rready   => sdram_axi_rready,
      s_axi_rresp    => open,
      s_axi_rvalid   => open,
      s_axi_wdata    => sdram_axi_wdata(C_AXI_CARD_MEM0_DATA_WIDTH-1 DOWNTO (C_AXI_CARD_MEM0_DATA_WIDTH/2)),
      s_axi_wlast    => sdram_axi_wlast,
      s_axi_wready   => open,
      s_axi_wstrb    => sdram_axi_wstrb((C_AXI_CARD_MEM0_DATA_WIDTH/8)-1 DOWNTO (C_AXI_CARD_MEM0_DATA_WIDTH/16)),
      s_axi_wvalid   => sdram_axi_wvalid
    );
#endif

#ifdef CONFIG_ENABLE_HBM
    m_axi_card_hbm_p0_arlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p0_arlock(0) OR m_axi_card_hbm_p0_arlock(1);
    m_axi_card_hbm_p0_awlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p0_awlock(0) OR m_axi_card_hbm_p0_awlock(1);

    m_axi_card_hbm_p1_arlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_arlock(0) OR m_axi_card_hbm_p1_arlock(1);
    m_axi_card_hbm_p1_awlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_awlock(0) OR m_axi_card_hbm_p1_awlock(1);
    
    m_axi_card_hbm_p2_arlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_arlock(0) OR m_axi_card_hbm_p1_arlock(1);
    m_axi_card_hbm_p2_awlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_awlock(0) OR m_axi_card_hbm_p1_awlock(1);
    
    m_axi_card_hbm_p3_arlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_arlock(0) OR m_axi_card_hbm_p1_arlock(1);
    m_axi_card_hbm_p3_awlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_awlock(0) OR m_axi_card_hbm_p1_awlock(1);
    
    m_axi_card_hbm_p4_arlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_arlock(0) OR m_axi_card_hbm_p1_arlock(1);
    m_axi_card_hbm_p4_awlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_awlock(0) OR m_axi_card_hbm_p1_awlock(1);
    
    m_axi_card_hbm_p5_arlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_arlock(0) OR m_axi_card_hbm_p1_arlock(1);
    m_axi_card_hbm_p5_awlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_awlock(0) OR m_axi_card_hbm_p1_awlock(1);
    
    m_axi_card_hbm_p6_arlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_arlock(0) OR m_axi_card_hbm_p1_arlock(1);
    m_axi_card_hbm_p6_awlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_awlock(0) OR m_axi_card_hbm_p1_awlock(1);
    
    m_axi_card_hbm_p7_arlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_arlock(0) OR m_axi_card_hbm_p1_arlock(1);
    m_axi_card_hbm_p7_awlock_01 <= (OTHERS => '0'); --m_axi_card_hbm_p1_awlock(0) OR m_axi_card_hbm_p1_awlock(1);

  hbm_top_wrapper_i : hbm_top_wrapper
    PORT MAP (
    ARESETN                => action_reset_n_q,
--CHANGE_HBM_INTERFACES_NUMBER
-- copy/paste these 36 signals for a new AXI interface
    S_AXI_p0_HBM_ACLK         => ha_pclock, -- 250MHz clock 
    S_AXI_p0_HBM_araddr         => m_axi_card_hbm_p0_araddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p0_HBM_arburst        => m_axi_card_hbm_p0_arburst,
    S_AXI_p0_HBM_arcache        => m_axi_card_hbm_p0_arcache,
    S_AXI_p0_HBM_arlen          => m_axi_card_hbm_p0_arlen,
    S_AXI_p0_HBM_arprot         => m_axi_card_hbm_p0_arprot,
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p0_HBM_arlock         => m_axi_card_hbm_p0_arlock_01(0),
    S_AXI_p0_HBM_awlock         => m_axi_card_hbm_p0_awlock_01(0),
#else
    S_AXI_p0_HBM_arlock         => m_axi_card_hbm_p0_arlock_01,
    S_AXI_p0_HBM_awlock         => m_axi_card_hbm_p0_awlock_01,
    S_AXI_p0_HBM_arqos          => m_axi_card_hbm_p0_arqos,
    S_AXI_p0_HBM_awqos          => m_axi_card_hbm_p0_awqos,
    S_AXI_p0_HBM_arregion       => m_axi_card_hbm_p0_arregion,
    S_AXI_p0_HBM_awregion       => m_axi_card_hbm_p0_awregion,
#endif
    S_AXI_p0_HBM_arready        => m_axi_card_hbm_p0_arready,
    S_AXI_p0_HBM_arsize         => m_axi_card_hbm_p0_arsize,
    S_AXI_p0_HBM_arvalid        => m_axi_card_hbm_p0_arvalid,
    S_AXI_p0_HBM_awaddr         => m_axi_card_hbm_p0_awaddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p0_HBM_awburst        => m_axi_card_hbm_p0_awburst,
    S_AXI_p0_HBM_awcache        => m_axi_card_hbm_p0_awcache,
    S_AXI_p0_HBM_awlen          => m_axi_card_hbm_p0_awlen,
    S_AXI_p0_HBM_awprot         => m_axi_card_hbm_p0_awprot,
    S_AXI_p0_HBM_awready        => m_axi_card_hbm_p0_awready,
    S_AXI_p0_HBM_awsize         => m_axi_card_hbm_p0_awsize,
    S_AXI_p0_HBM_awvalid        => m_axi_card_hbm_p0_awvalid,
    S_AXI_p0_HBM_bready         => m_axi_card_hbm_p0_bready,
    S_AXI_p0_HBM_bresp          => m_axi_card_hbm_p0_bresp,
    S_AXI_p0_HBM_bvalid         => m_axi_card_hbm_p0_bvalid,
    S_AXI_p0_HBM_rdata          => m_axi_card_hbm_p0_rdata,
    S_AXI_p0_HBM_rlast          => m_axi_card_hbm_p0_rlast,
    S_AXI_p0_HBM_rready         => m_axi_card_hbm_p0_rready,
    S_AXI_p0_HBM_rresp          => m_axi_card_hbm_p0_rresp,
    S_AXI_p0_HBM_rvalid         => m_axi_card_hbm_p0_rvalid,
    S_AXI_p0_HBM_wdata          => m_axi_card_hbm_p0_wdata,
    S_AXI_p0_HBM_wlast          => m_axi_card_hbm_p0_wlast,
    S_AXI_p0_HBM_wready         => m_axi_card_hbm_p0_wready,
    S_AXI_p0_HBM_wstrb          => m_axi_card_hbm_p0_wstrb,
    S_AXI_p0_HBM_wvalid         => m_axi_card_hbm_p0_wvalid,
-- 
    S_AXI_p1_HBM_ACLK         => ha_pclock, -- 250MHz clock 
    S_AXI_p1_HBM_araddr         => m_axi_card_hbm_p1_araddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p1_HBM_arburst        => m_axi_card_hbm_p1_arburst,
    S_AXI_p1_HBM_arcache        => m_axi_card_hbm_p1_arcache,
    S_AXI_p1_HBM_arlen          => m_axi_card_hbm_p1_arlen,
    S_AXI_p1_HBM_arprot         => m_axi_card_hbm_p1_arprot,
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p1_HBM_arlock         => m_axi_card_hbm_p1_arlock_01(0),
    S_AXI_p1_HBM_awlock         => m_axi_card_hbm_p1_awlock_01(0),
 #else
    S_AXI_p1_HBM_arlock         => m_axi_card_hbm_p1_arlock_01,
    S_AXI_p1_HBM_awlock         => m_axi_card_hbm_p1_awlock_01,
    S_AXI_p1_HBM_arqos          => m_axi_card_hbm_p1_arqos,
    S_AXI_p1_HBM_awqos          => m_axi_card_hbm_p1_awqos,
    S_AXI_p1_HBM_arregion       => m_axi_card_hbm_p1_arregion,
    S_AXI_p1_HBM_awregion       => m_axi_card_hbm_p1_awregion,
#endif
    S_AXI_p1_HBM_arready        => m_axi_card_hbm_p1_arready,
    S_AXI_p1_HBM_arsize         => m_axi_card_hbm_p1_arsize,
    S_AXI_p1_HBM_arvalid        => m_axi_card_hbm_p1_arvalid,
    S_AXI_p1_HBM_awaddr         => m_axi_card_hbm_p1_awaddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p1_HBM_awburst        => m_axi_card_hbm_p1_awburst,
    S_AXI_p1_HBM_awcache        => m_axi_card_hbm_p1_awcache,
    S_AXI_p1_HBM_awlen          => m_axi_card_hbm_p1_awlen,
    S_AXI_p1_HBM_awprot         => m_axi_card_hbm_p1_awprot,
    S_AXI_p1_HBM_awready        => m_axi_card_hbm_p1_awready,
    S_AXI_p1_HBM_awsize         => m_axi_card_hbm_p1_awsize,
    S_AXI_p1_HBM_awvalid        => m_axi_card_hbm_p1_awvalid,
    S_AXI_p1_HBM_bready         => m_axi_card_hbm_p1_bready,
    S_AXI_p1_HBM_bresp          => m_axi_card_hbm_p1_bresp,
    S_AXI_p1_HBM_bvalid         => m_axi_card_hbm_p1_bvalid,
    S_AXI_p1_HBM_rdata          => m_axi_card_hbm_p1_rdata,
    S_AXI_p1_HBM_rlast          => m_axi_card_hbm_p1_rlast,
    S_AXI_p1_HBM_rready         => m_axi_card_hbm_p1_rready,
    S_AXI_p1_HBM_rresp          => m_axi_card_hbm_p1_rresp,
    S_AXI_p1_HBM_rvalid         => m_axi_card_hbm_p1_rvalid,
    S_AXI_p1_HBM_wdata          => m_axi_card_hbm_p1_wdata,
    S_AXI_p1_HBM_wlast          => m_axi_card_hbm_p1_wlast,
    S_AXI_p1_HBM_wready         => m_axi_card_hbm_p1_wready,
    S_AXI_p1_HBM_wstrb          => m_axi_card_hbm_p1_wstrb,
    S_AXI_p1_HBM_wvalid         => m_axi_card_hbm_p1_wvalid,
-- 
    S_AXI_p2_HBM_ACLK         => ha_pclock, -- 250MHz clock 
    S_AXI_p2_HBM_araddr         => m_axi_card_hbm_p2_araddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p2_HBM_arburst        => m_axi_card_hbm_p2_arburst,
    S_AXI_p2_HBM_arcache        => m_axi_card_hbm_p2_arcache,
    S_AXI_p2_HBM_arlen          => m_axi_card_hbm_p2_arlen,
    S_AXI_p2_HBM_arprot         => m_axi_card_hbm_p2_arprot,
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p2_HBM_arlock         => m_axi_card_hbm_p2_arlock_01(0),
    S_AXI_p2_HBM_awlock         => m_axi_card_hbm_p2_awlock_01(0),
#else
    S_AXI_p2_HBM_arlock         => m_axi_card_hbm_p2_arlock_01,
    S_AXI_p2_HBM_awlock         => m_axi_card_hbm_p2_awlock_01,
    S_AXI_p2_HBM_arqos          => m_axi_card_hbm_p2_arqos,
    S_AXI_p2_HBM_awqos          => m_axi_card_hbm_p2_awqos,
    S_AXI_p2_HBM_arregion       => m_axi_card_hbm_p2_arregion,
    S_AXI_p2_HBM_awregion       => m_axi_card_hbm_p2_awregion,
#endif
    S_AXI_p2_HBM_arready        => m_axi_card_hbm_p2_arready,
    S_AXI_p2_HBM_arsize         => m_axi_card_hbm_p2_arsize,
    S_AXI_p2_HBM_arvalid        => m_axi_card_hbm_p2_arvalid,
    S_AXI_p2_HBM_awaddr         => m_axi_card_hbm_p2_awaddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p2_HBM_awburst        => m_axi_card_hbm_p2_awburst,
    S_AXI_p2_HBM_awcache        => m_axi_card_hbm_p2_awcache,
    S_AXI_p2_HBM_awlen          => m_axi_card_hbm_p2_awlen,
    S_AXI_p2_HBM_awprot         => m_axi_card_hbm_p2_awprot,
    S_AXI_p2_HBM_awready        => m_axi_card_hbm_p2_awready,
    S_AXI_p2_HBM_awsize         => m_axi_card_hbm_p2_awsize,
    S_AXI_p2_HBM_awvalid        => m_axi_card_hbm_p2_awvalid,
    S_AXI_p2_HBM_bready         => m_axi_card_hbm_p2_bready,
    S_AXI_p2_HBM_bresp          => m_axi_card_hbm_p2_bresp,
    S_AXI_p2_HBM_bvalid         => m_axi_card_hbm_p2_bvalid,
    S_AXI_p2_HBM_rdata          => m_axi_card_hbm_p2_rdata,
    S_AXI_p2_HBM_rlast          => m_axi_card_hbm_p2_rlast,
    S_AXI_p2_HBM_rready         => m_axi_card_hbm_p2_rready,
    S_AXI_p2_HBM_rresp          => m_axi_card_hbm_p2_rresp,
    S_AXI_p2_HBM_rvalid         => m_axi_card_hbm_p2_rvalid,
    S_AXI_p2_HBM_wdata          => m_axi_card_hbm_p2_wdata,
    S_AXI_p2_HBM_wlast          => m_axi_card_hbm_p2_wlast,
    S_AXI_p2_HBM_wready         => m_axi_card_hbm_p2_wready,
    S_AXI_p2_HBM_wstrb          => m_axi_card_hbm_p2_wstrb,
    S_AXI_p2_HBM_wvalid         => m_axi_card_hbm_p2_wvalid,
-- 
    S_AXI_p3_HBM_ACLK         => ha_pclock, -- 250MHz clock 
    S_AXI_p3_HBM_araddr         => m_axi_card_hbm_p3_araddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p3_HBM_arburst        => m_axi_card_hbm_p3_arburst,
    S_AXI_p3_HBM_arcache        => m_axi_card_hbm_p3_arcache,
    S_AXI_p3_HBM_arlen          => m_axi_card_hbm_p3_arlen,
    S_AXI_p3_HBM_arprot         => m_axi_card_hbm_p3_arprot,
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p3_HBM_arlock         => m_axi_card_hbm_p3_arlock_01(0),
    S_AXI_p3_HBM_awlock         => m_axi_card_hbm_p3_awlock_01(0),
#else
    S_AXI_p3_HBM_arlock         => m_axi_card_hbm_p3_arlock_01,
    S_AXI_p3_HBM_awlock         => m_axi_card_hbm_p3_awlock_01,
    S_AXI_p3_HBM_arqos          => m_axi_card_hbm_p3_arqos,
    S_AXI_p3_HBM_awqos          => m_axi_card_hbm_p3_awqos,
    S_AXI_p3_HBM_arregion       => m_axi_card_hbm_p3_arregion,
    S_AXI_p3_HBM_awregion       => m_axi_card_hbm_p3_awregion,
#endif
    S_AXI_p3_HBM_arready        => m_axi_card_hbm_p3_arready,
    S_AXI_p3_HBM_arsize         => m_axi_card_hbm_p3_arsize,
    S_AXI_p3_HBM_arvalid        => m_axi_card_hbm_p3_arvalid,
    S_AXI_p3_HBM_awaddr         => m_axi_card_hbm_p3_awaddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p3_HBM_awburst        => m_axi_card_hbm_p3_awburst,
    S_AXI_p3_HBM_awcache        => m_axi_card_hbm_p3_awcache,
    S_AXI_p3_HBM_awlen          => m_axi_card_hbm_p3_awlen,
    S_AXI_p3_HBM_awprot         => m_axi_card_hbm_p3_awprot,
    S_AXI_p3_HBM_awready        => m_axi_card_hbm_p3_awready,
    S_AXI_p3_HBM_awsize         => m_axi_card_hbm_p3_awsize,
    S_AXI_p3_HBM_awvalid        => m_axi_card_hbm_p3_awvalid,
    S_AXI_p3_HBM_bready         => m_axi_card_hbm_p3_bready,
    S_AXI_p3_HBM_bresp          => m_axi_card_hbm_p3_bresp,
    S_AXI_p3_HBM_bvalid         => m_axi_card_hbm_p3_bvalid,
    S_AXI_p3_HBM_rdata          => m_axi_card_hbm_p3_rdata,
    S_AXI_p3_HBM_rlast          => m_axi_card_hbm_p3_rlast,
    S_AXI_p3_HBM_rready         => m_axi_card_hbm_p3_rready,
    S_AXI_p3_HBM_rresp          => m_axi_card_hbm_p3_rresp,
    S_AXI_p3_HBM_rvalid         => m_axi_card_hbm_p3_rvalid,
    S_AXI_p3_HBM_wdata          => m_axi_card_hbm_p3_wdata,
    S_AXI_p3_HBM_wlast          => m_axi_card_hbm_p3_wlast,
    S_AXI_p3_HBM_wready         => m_axi_card_hbm_p3_wready,
    S_AXI_p3_HBM_wstrb          => m_axi_card_hbm_p3_wstrb,
    S_AXI_p3_HBM_wvalid         => m_axi_card_hbm_p3_wvalid,
-- 
    S_AXI_p4_HBM_ACLK         => ha_pclock, -- 250MHz clock 
    S_AXI_p4_HBM_araddr         => m_axi_card_hbm_p4_araddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p4_HBM_arburst        => m_axi_card_hbm_p4_arburst,
    S_AXI_p4_HBM_arcache        => m_axi_card_hbm_p4_arcache,
    S_AXI_p4_HBM_arlen          => m_axi_card_hbm_p4_arlen,
    S_AXI_p4_HBM_arprot         => m_axi_card_hbm_p4_arprot,
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p4_HBM_arlock         => m_axi_card_hbm_p4_arlock_01(0),
    S_AXI_p4_HBM_awlock         => m_axi_card_hbm_p4_awlock_01(0),
#else
    S_AXI_p4_HBM_arlock         => m_axi_card_hbm_p4_arlock_01,
    S_AXI_p4_HBM_awlock         => m_axi_card_hbm_p4_awlock_01,
    S_AXI_p4_HBM_arqos          => m_axi_card_hbm_p4_arqos,
    S_AXI_p4_HBM_awqos          => m_axi_card_hbm_p4_awqos,
    S_AXI_p4_HBM_arregion       => m_axi_card_hbm_p4_arregion,
    S_AXI_p4_HBM_awregion       => m_axi_card_hbm_p4_awregion,
#endif
    S_AXI_p4_HBM_arready        => m_axi_card_hbm_p4_arready,
    S_AXI_p4_HBM_arsize         => m_axi_card_hbm_p4_arsize,
    S_AXI_p4_HBM_arvalid        => m_axi_card_hbm_p4_arvalid,
    S_AXI_p4_HBM_awaddr         => m_axi_card_hbm_p4_awaddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p4_HBM_awburst        => m_axi_card_hbm_p4_awburst,
    S_AXI_p4_HBM_awcache        => m_axi_card_hbm_p4_awcache,
    S_AXI_p4_HBM_awlen          => m_axi_card_hbm_p4_awlen,
    S_AXI_p4_HBM_awprot         => m_axi_card_hbm_p4_awprot,
    S_AXI_p4_HBM_awready        => m_axi_card_hbm_p4_awready,
    S_AXI_p4_HBM_awsize         => m_axi_card_hbm_p4_awsize,
    S_AXI_p4_HBM_awvalid        => m_axi_card_hbm_p4_awvalid,
    S_AXI_p4_HBM_bready         => m_axi_card_hbm_p4_bready,
    S_AXI_p4_HBM_bresp          => m_axi_card_hbm_p4_bresp,
    S_AXI_p4_HBM_bvalid         => m_axi_card_hbm_p4_bvalid,
    S_AXI_p4_HBM_rdata          => m_axi_card_hbm_p4_rdata,
    S_AXI_p4_HBM_rlast          => m_axi_card_hbm_p4_rlast,
    S_AXI_p4_HBM_rready         => m_axi_card_hbm_p4_rready,
    S_AXI_p4_HBM_rresp          => m_axi_card_hbm_p4_rresp,
    S_AXI_p4_HBM_rvalid         => m_axi_card_hbm_p4_rvalid,
    S_AXI_p4_HBM_wdata          => m_axi_card_hbm_p4_wdata,
    S_AXI_p4_HBM_wlast          => m_axi_card_hbm_p4_wlast,
    S_AXI_p4_HBM_wready         => m_axi_card_hbm_p4_wready,
    S_AXI_p4_HBM_wstrb          => m_axi_card_hbm_p4_wstrb,
    S_AXI_p4_HBM_wvalid         => m_axi_card_hbm_p4_wvalid,
-- 
    S_AXI_p5_HBM_ACLK         => ha_pclock, -- 250MHz clock 
    S_AXI_p5_HBM_araddr         => m_axi_card_hbm_p5_araddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p5_HBM_arburst        => m_axi_card_hbm_p5_arburst,
    S_AXI_p5_HBM_arcache        => m_axi_card_hbm_p5_arcache,
    S_AXI_p5_HBM_arlen          => m_axi_card_hbm_p5_arlen,
    S_AXI_p5_HBM_arprot         => m_axi_card_hbm_p5_arprot,
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p5_HBM_arlock         => m_axi_card_hbm_p5_arlock_01(0),
    S_AXI_p5_HBM_awlock         => m_axi_card_hbm_p5_awlock_01(0),
#else
    S_AXI_p5_HBM_arlock         => m_axi_card_hbm_p5_arlock_01,
    S_AXI_p5_HBM_awlock         => m_axi_card_hbm_p5_awlock_01,
    S_AXI_p5_HBM_arqos          => m_axi_card_hbm_p5_arqos,
    S_AXI_p5_HBM_awqos          => m_axi_card_hbm_p5_awqos,
    S_AXI_p5_HBM_arregion       => m_axi_card_hbm_p5_arregion,
    S_AXI_p5_HBM_awregion       => m_axi_card_hbm_p5_awregion,
#endif
    S_AXI_p5_HBM_arready        => m_axi_card_hbm_p5_arready,
    S_AXI_p5_HBM_arsize         => m_axi_card_hbm_p5_arsize,
    S_AXI_p5_HBM_arvalid        => m_axi_card_hbm_p5_arvalid,
    S_AXI_p5_HBM_awaddr         => m_axi_card_hbm_p5_awaddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p5_HBM_awburst        => m_axi_card_hbm_p5_awburst,
    S_AXI_p5_HBM_awcache        => m_axi_card_hbm_p5_awcache,
    S_AXI_p5_HBM_awlen          => m_axi_card_hbm_p5_awlen,
    S_AXI_p5_HBM_awprot         => m_axi_card_hbm_p5_awprot,
    S_AXI_p5_HBM_awready        => m_axi_card_hbm_p5_awready,
    S_AXI_p5_HBM_awsize         => m_axi_card_hbm_p5_awsize,
    S_AXI_p5_HBM_awvalid        => m_axi_card_hbm_p5_awvalid,
    S_AXI_p5_HBM_bready         => m_axi_card_hbm_p5_bready,
    S_AXI_p5_HBM_bresp          => m_axi_card_hbm_p5_bresp,
    S_AXI_p5_HBM_bvalid         => m_axi_card_hbm_p5_bvalid,
    S_AXI_p5_HBM_rdata          => m_axi_card_hbm_p5_rdata,
    S_AXI_p5_HBM_rlast          => m_axi_card_hbm_p5_rlast,
    S_AXI_p5_HBM_rready         => m_axi_card_hbm_p5_rready,
    S_AXI_p5_HBM_rresp          => m_axi_card_hbm_p5_rresp,
    S_AXI_p5_HBM_rvalid         => m_axi_card_hbm_p5_rvalid,
    S_AXI_p5_HBM_wdata          => m_axi_card_hbm_p5_wdata,
    S_AXI_p5_HBM_wlast          => m_axi_card_hbm_p5_wlast,
    S_AXI_p5_HBM_wready         => m_axi_card_hbm_p5_wready,
    S_AXI_p5_HBM_wstrb          => m_axi_card_hbm_p5_wstrb,
    S_AXI_p5_HBM_wvalid         => m_axi_card_hbm_p5_wvalid,
-- 
    S_AXI_p6_HBM_ACLK         => ha_pclock, -- 250MHz clock 
    S_AXI_p6_HBM_araddr         => m_axi_card_hbm_p6_araddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p6_HBM_arburst        => m_axi_card_hbm_p6_arburst,
    S_AXI_p6_HBM_arcache        => m_axi_card_hbm_p6_arcache,
    S_AXI_p6_HBM_arlen          => m_axi_card_hbm_p6_arlen,
    S_AXI_p6_HBM_arprot         => m_axi_card_hbm_p6_arprot,
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p6_HBM_arlock         => m_axi_card_hbm_p6_arlock_01(0),
    S_AXI_p6_HBM_awlock         => m_axi_card_hbm_p6_awlock_01(0),
#else
    S_AXI_p6_HBM_arlock         => m_axi_card_hbm_p6_arlock_01,
    S_AXI_p6_HBM_awlock         => m_axi_card_hbm_p6_awlock_01,
    S_AXI_p6_HBM_arqos          => m_axi_card_hbm_p6_arqos,
    S_AXI_p6_HBM_awqos          => m_axi_card_hbm_p6_awqos,
    S_AXI_p6_HBM_arregion       => m_axi_card_hbm_p6_arregion,
    S_AXI_p6_HBM_awregion       => m_axi_card_hbm_p6_awregion,
#endif
    S_AXI_p6_HBM_arready        => m_axi_card_hbm_p6_arready,
    S_AXI_p6_HBM_arsize         => m_axi_card_hbm_p6_arsize,
    S_AXI_p6_HBM_arvalid        => m_axi_card_hbm_p6_arvalid,
    S_AXI_p6_HBM_awaddr         => m_axi_card_hbm_p6_awaddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p6_HBM_awburst        => m_axi_card_hbm_p6_awburst,
    S_AXI_p6_HBM_awcache        => m_axi_card_hbm_p6_awcache,
    S_AXI_p6_HBM_awlen          => m_axi_card_hbm_p6_awlen,
    S_AXI_p6_HBM_awprot         => m_axi_card_hbm_p6_awprot,
    S_AXI_p6_HBM_awready        => m_axi_card_hbm_p6_awready,
    S_AXI_p6_HBM_awsize         => m_axi_card_hbm_p6_awsize,
    S_AXI_p6_HBM_awvalid        => m_axi_card_hbm_p6_awvalid,
    S_AXI_p6_HBM_bready         => m_axi_card_hbm_p6_bready,
    S_AXI_p6_HBM_bresp          => m_axi_card_hbm_p6_bresp,
    S_AXI_p6_HBM_bvalid         => m_axi_card_hbm_p6_bvalid,
    S_AXI_p6_HBM_rdata          => m_axi_card_hbm_p6_rdata,
    S_AXI_p6_HBM_rlast          => m_axi_card_hbm_p6_rlast,
    S_AXI_p6_HBM_rready         => m_axi_card_hbm_p6_rready,
    S_AXI_p6_HBM_rresp          => m_axi_card_hbm_p6_rresp,
    S_AXI_p6_HBM_rvalid         => m_axi_card_hbm_p6_rvalid,
    S_AXI_p6_HBM_wdata          => m_axi_card_hbm_p6_wdata,
    S_AXI_p6_HBM_wlast          => m_axi_card_hbm_p6_wlast,
    S_AXI_p6_HBM_wready         => m_axi_card_hbm_p6_wready,
    S_AXI_p6_HBM_wstrb          => m_axi_card_hbm_p6_wstrb,
    S_AXI_p6_HBM_wvalid         => m_axi_card_hbm_p6_wvalid,
-- 
    S_AXI_p7_HBM_ACLK         => ha_pclock, -- 250MHz clock 
    S_AXI_p7_HBM_araddr         => m_axi_card_hbm_p7_araddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p7_HBM_arburst        => m_axi_card_hbm_p7_arburst,
    S_AXI_p7_HBM_arcache        => m_axi_card_hbm_p7_arcache,
    S_AXI_p7_HBM_arlen          => m_axi_card_hbm_p7_arlen,
    S_AXI_p7_HBM_arprot         => m_axi_card_hbm_p7_arprot,
#ifdef CONFIG_REPLACE_HBM_BY_BRAM
    S_AXI_p7_HBM_arlock         => m_axi_card_hbm_p7_arlock_01(0),
    S_AXI_p7_HBM_awlock         => m_axi_card_hbm_p7_awlock_01(0),
#else
    S_AXI_p7_HBM_arlock         => m_axi_card_hbm_p7_arlock_01,
    S_AXI_p7_HBM_awlock         => m_axi_card_hbm_p7_awlock_01,
    S_AXI_p7_HBM_arqos          => m_axi_card_hbm_p7_arqos,
    S_AXI_p7_HBM_awqos          => m_axi_card_hbm_p7_awqos,
    S_AXI_p7_HBM_arregion       => m_axi_card_hbm_p7_arregion,
    S_AXI_p7_HBM_awregion       => m_axi_card_hbm_p7_awregion,
#endif
    S_AXI_p7_HBM_arready        => m_axi_card_hbm_p7_arready,
    S_AXI_p7_HBM_arsize         => m_axi_card_hbm_p7_arsize,
    S_AXI_p7_HBM_arvalid        => m_axi_card_hbm_p7_arvalid,
    S_AXI_p7_HBM_awaddr         => m_axi_card_hbm_p7_awaddr( C_M_AXI_CARD_HBM_SIM_ADDR_WIDTH-1 downto 0 ),
    S_AXI_p7_HBM_awburst        => m_axi_card_hbm_p7_awburst,
    S_AXI_p7_HBM_awcache        => m_axi_card_hbm_p7_awcache,
    S_AXI_p7_HBM_awlen          => m_axi_card_hbm_p7_awlen,
    S_AXI_p7_HBM_awprot         => m_axi_card_hbm_p7_awprot,
    S_AXI_p7_HBM_awready        => m_axi_card_hbm_p7_awready,
    S_AXI_p7_HBM_awsize         => m_axi_card_hbm_p7_awsize,
    S_AXI_p7_HBM_awvalid        => m_axi_card_hbm_p7_awvalid,
    S_AXI_p7_HBM_bready         => m_axi_card_hbm_p7_bready,
    S_AXI_p7_HBM_bresp          => m_axi_card_hbm_p7_bresp,
    S_AXI_p7_HBM_bvalid         => m_axi_card_hbm_p7_bvalid,
    S_AXI_p7_HBM_rdata          => m_axi_card_hbm_p7_rdata,
    S_AXI_p7_HBM_rlast          => m_axi_card_hbm_p7_rlast,
    S_AXI_p7_HBM_rready         => m_axi_card_hbm_p7_rready,
    S_AXI_p7_HBM_rresp          => m_axi_card_hbm_p7_rresp,
    S_AXI_p7_HBM_rvalid         => m_axi_card_hbm_p7_rvalid,
    S_AXI_p7_HBM_wdata          => m_axi_card_hbm_p7_wdata,
    S_AXI_p7_HBM_wlast          => m_axi_card_hbm_p7_wlast,
    S_AXI_p7_HBM_wready         => m_axi_card_hbm_p7_wready,
    S_AXI_p7_HBM_wstrb          => m_axi_card_hbm_p7_wstrb,
    S_AXI_p7_HBM_wvalid         => m_axi_card_hbm_p7_wvalid
-- 
--    refclk300_n                => refclk300_p,
--    refclk300_p                => refclk300_n
  );
#endif
#if defined(CONFIG_ENABLE_ETHERNET) && !defined(CONFIG_ENABLE_ETH_LOOP_BACK)
  --
  -- ETHERNET IP
  --
    eth_100G_0: eth_100G
    port map(
        i_gt_ref_clk_n                  => gt_ref_clk_n,
        i_gt_ref_clk_p                  => gt_ref_clk_p,

        i_gt_rx_gt_port_0_n        => gt_rx_gt_port_0_n,
        i_gt_rx_gt_port_0_p        => gt_rx_gt_port_0_p,
        i_gt_rx_gt_port_1_n        => gt_rx_gt_port_1_n,
        i_gt_rx_gt_port_1_p        => gt_rx_gt_port_1_p,
        i_gt_rx_gt_port_2_n        => gt_rx_gt_port_2_n,
        i_gt_rx_gt_port_2_p        => gt_rx_gt_port_2_p,
        i_gt_rx_gt_port_3_n        => gt_rx_gt_port_3_n,
        i_gt_rx_gt_port_3_p        => gt_rx_gt_port_3_p,

        o_gt_tx_gt_port_0_n        => gt_tx_gt_port_0_n,
        o_gt_tx_gt_port_0_p        => gt_tx_gt_port_0_p,
        o_gt_tx_gt_port_1_n        => gt_tx_gt_port_1_n,
        o_gt_tx_gt_port_1_p        => gt_tx_gt_port_1_p,
        o_gt_tx_gt_port_2_n        => gt_tx_gt_port_2_n,
        o_gt_tx_gt_port_2_p        => gt_tx_gt_port_2_p,
        o_gt_tx_gt_port_3_n        => gt_tx_gt_port_3_n,
        o_gt_tx_gt_port_3_p        => gt_tx_gt_port_3_p,

        m_axis_rx_tdata               => eth1_rx_tdata,
        m_axis_rx_tkeep               => eth1_rx_tkeep,
        m_axis_rx_tlast               => eth1_rx_tlast,
        m_axis_rx_tvalid              => eth1_rx_tvalid,
        m_axis_rx_tuser               => eth1_rx_tuser,
        m_axis_rx_tready              => eth1_rx_tready,

-- Enable for ethernet TX
        s_axis_tx_tdata               => eth1_tx_tdata,
        s_axis_tx_tkeep               => eth1_tx_tkeep,
        s_axis_tx_tlast               => eth1_tx_tlast,
        s_axis_tx_tvalid              => eth1_tx_tvalid,
        s_axis_tx_tuser               => eth1_tx_tuser,
        s_axis_tx_tready              => eth1_tx_tready,

        i_sys_reset                     => eth_rst,
        i_core_rx_reset                 => eth_rst,
        i_core_tx_reset                 => eth_rst,
	i_capi_clk	                => ha_pclock,

        i_ctl_rx_enable                 => '1',
        i_ctl_rx_rsfec_enable           => '1',
        i_ctl_tx_enable                 => '1',
        i_ctl_tx_rsfec_enable           => '1'
    );
#endif

END psl_accel;
