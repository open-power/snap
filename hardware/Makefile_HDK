############################################################################
############################################################################
##
## Copyright 2016,2017 International Business Machines
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE#2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions AND
## limitations under the License.
##
############################################################################
############################################################################

export BUILD_NAME=HDK_build
export BUILD_DIR=$(SNAP_HARDWARE_ROOT)/$(BUILD_NAME)
export SNAP_HDL_CORE=$(SNAP_HARDWARE_ROOT)/hdl/core
export SNAP_SIM_CORE=$(SNAP_HARDWARE_ROOT)/sim/core
export LOGS_DIR=$(SNAP_HARDWARE_ROOT)/logs

SNAP_CONFIG_FILES=$(SNAP_HDL_CORE)/psl_fpga.vhd \
		  $(SNAP_HDL_CORE)/psl_accel.vhd \
		  $(SNAP_HDL_CORE)/psl_accel_types.vhd \
		  $(SNAP_SIM_CORE)/top.sv \
		  $(SNAP_HDL_CORE)/snap_core.vhd \
		  $(SNAP_HDL_CORE)/snap_core_types.vhd \
		  $(SNAP_HDL_CORE)/mmio.vhd

PROJECT_COMPILE_LIST = $(SNAP_HARDWARE_ROOT)/sim/xsim/file_info.txt


.PHONY: all image model action_config create_environment copy config patch_version patch_vhd_files patch_tcl_files

all: config model image


create_environment:
	@cd $(SNAP_HARDWARE_ROOT)/setup && ./create_environment -p -clone
	@echo -e "\t[CREATE_ENVIRONMENT] done `date`"

copy $(BUILD_DIR)/psl_fpga.tcl:
	@echo -e "\t[COPY] psl build env"; cp -a $(HDK_ROOT) $(BUILD_DIR)
	@ mkdir logs
	@echo -e "\t[CONFIG] setup psl_fpga.tcl"
	@sed -i 's/run.oocSynth.*1/run.oocSynth 0/' $(BUILD_DIR)/psl_fpga.tcl
	@sed -i 's/run.oocImpl.*1/run.oocImpl 0/'   $(BUILD_DIR)/psl_fpga.tcl
	@sed -i 's/run.topImpl.*0/run.topImpl 1/'   $(BUILD_DIR)/psl_fpga.tcl
	@sed -i 's/run.topSynth.*0/run.topSynth 1/' $(BUILD_DIR)/psl_fpga.tcl
	@if [ $(FPGACARD) = "KU3" ]; then \
	  ln -f -s $(SNAP_HDL_CORE)/psl_fpga_ku3.vhd_source  $(SNAP_HDL_CORE)/psl_fpga.vhd_source; \
	  ln -f -s $(SNAP_HDL_CORE)/psl_accel_ku3.vhd_source $(SNAP_HDL_CORE)/psl_accel.vhd_source; \
        fi
	@if [ $(FPGACARD) = "FGT" ]; then \
	  ln -f -s $(SNAP_HDL_CORE)/psl_fpga_fgt.vhd_source  $(SNAP_HDL_CORE)/psl_fpga.vhd_source; \
	  ln -f -s $(SNAP_HDL_CORE)/psl_accel_fgt.vhd_source $(SNAP_HDL_CORE)/psl_accel.vhd_source; \
	fi
	@echo "vhdl work ../hdl/core/psl_fpga.vhd" > $(BUILD_DIR)/Sources/prj/top.prj
	@ln -s $(BUILD_NAME) build

$(BUILD_DIR)/Sources/prj/psl_fpga.prj: $(BUILD_DIR)/psl_fpga.tcl
	@echo -e "\t[CREATE] $(BUILD_DIR)/Sources/prj/afu.prj"
	@cut -d "," -f "2 3 4" $(PROJECT_COMPILE_LIST) | sed 's/, */ /g' | \
		grep -E "(\/hdl\/|\/action_examples\/)" | \
		grep -Ev '\/ip\/|action_auto_|viv_project' | \
                sed 's/ ..\/..\// ..\//' | sed 's/ ..\/..\// ..\//' | sed 's/ ..\/..\// ..\//' |\
		grep -v ddr3_dimm | grep -v top.sv  > $(BUILD_DIR)/Sources/prj/afu.prj;
	@echo -e "\t[CREATE] $@"
	@cat $(BUILD_DIR)/Sources/prj/top.prj $(BUILD_DIR)/Sources/prj/afu.prj > $(BUILD_DIR)/Sources/prj/psl_fpga.prj

%.vhd: %.vhd_source
	@$(SNAP_HARDWARE_ROOT)/setup/snap_config.sh $@_source $@

%.sv: %.sv_source
	@$(SNAP_HARDWARE_ROOT)/setup/snap_config.sh $@_source $@

action_config: $(ACTION_ROOT)
	@if [ -e "$(ACTION_ROOT)/action_config.sh" ]; then \
		echo -e "Executing $(ACTION_ROOT)/action_config.sh"; \
		cd $(ACTION_ROOT) && ./action_config.sh; \
	fi

# In case we have a HLS action there will be no vhdl directory,
# such that ACTION_ROOT does not exist. To build it, we go one directory
# above and issue "make", such that the vhdl code can be synthesized.
$(ACTION_ROOT):
	$(MAKE) -C `dirname $(ACTION_ROOT)`

patch_tcl_files:
	@echo "PATCH .tcl FILES"  && $(SNAP_HARDWARE_ROOT)/setup/patch_tcl.sh $(SNAP_HARDWARE_ROOT) $(BUILD_DIR)/psl_fpga.tcl

patch_version:
	@echo "PATCH SNAP version and build date registers"; \
	$(SNAP_HARDWARE_ROOT)/setup/patch_version.sh $(SNAP_HDL_CORE) snap_core.vhd

config: $(BUILD_DIR)/psl_fpga.tcl $(SNAP_CONFIG_FILES) action_config create_environment $(BUILD_DIR)/Sources/prj/psl_fpga.prj patch_tcl_files patch_version
	@echo -e "\t[CONFIG] done `date`"

model: $(SNAP_CONFIG_FILES) patch_version
	@echo -e "\t[BUILD MODEL] start `date`"
	@cd $(SNAP_HARDWARE_ROOT)/setup && ./create_environment -b
	@echo -e "\t[BUILD MODEL] done `date`"

image: $(SNAP_CONFIG_FILES) patch_version
	@echo -e "\t[BUILD IMAGE (BIT)] start `date`"
	@cd $(BUILD_DIR) && vivado -mode batch -source psl_fpga.tcl -notrace
	@if [ "`vivado -version |head -n1  |cut -c 9-12`" = "2015" ] && [ $(DDR3_USED) = "TRUE" ] && [ $(BRAM_USED) = "FALSE" ]; then\
	  cd $(SNAP_HARDWARE_ROOT)/setup && vivado -mode batch -source AR_64051.tcl -notrace;\
	else\
	  cd $(BUILD_DIR) && vivado -mode batch -source write_bitstream.tcl;\
	  mv $(BUILD_DIR)/Implement/psl_fpga/psl_fpga.bit $(BUILD_DIR)/psl_fpga_flash.bit;\
	fi
	@grep -A6 "Design Timing Summary" $(BUILD_DIR)/Implement/psl_fpga/reports/psl_fpga_timing_summary.rpt | egrep -v "^$|^\-\-"
	@echo -e "\t[BUILD IMAGE (BIN)] done  `date`"

